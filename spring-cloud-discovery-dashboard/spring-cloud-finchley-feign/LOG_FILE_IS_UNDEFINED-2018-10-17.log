2018-10-17 10:52:22,613  INFO - [main                 ] o.s.c.a.AnnotationConfigApplicationContext         : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2accdbb5: startup date [Wed Oct 17 10:52:22 CST 2018]; root of context hierarchy
2018-10-17 10:52:22,832  INFO - [main                 ] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor     : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-10-17 10:52:22,879  INFO - [main                 ] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$efdd7a6f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-17 10:52:23,238  INFO - [main                 ] com.example.feign.FeignApplication                 : No active profile set, falling back to default profiles: default
2018-10-17 10:52:23,254  INFO - [main                 ] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@42039326: startup date [Wed Oct 17 10:52:23 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2accdbb5
2018-10-17 10:52:24,160  INFO - [main                 ] o.springframework.cloud.context.scope.GenericScope : BeanFactory id=18102764-736e-3e96-905a-71bd514e6756
2018-10-17 10:52:24,175  INFO - [main                 ] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor     : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-10-17 10:52:24,285  INFO - [main                 ] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$efdd7a6f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-17 10:52:24,972  INFO - [main                 ] o.s.boot.web.embedded.tomcat.TomcatWebServer       : Tomcat initialized with port(s): 8090 (http)
2018-10-17 10:52:24,988  INFO - [main                 ] org.apache.coyote.http11.Http11NioProtocol         : Initializing ProtocolHandler ["http-nio-8090"]
2018-10-17 10:52:25,003  INFO - [main                 ] org.apache.catalina.core.StandardService           : Starting service [Tomcat]
2018-10-17 10:52:25,003  INFO - [main                 ] org.apache.catalina.core.StandardEngine            : Starting Servlet Engine: Apache Tomcat/8.5.32
2018-10-17 10:52:25,019  INFO - [localhost-startStop-1] org.apache.catalina.core.AprLifecycleListener      : The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_101\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;%JAVA_HOME%\bin;C:\Program Files\MySQL\MySQL Server 5.5\bin;E:\apache_maven_3.3.9\bin;D:\database\redis\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;D:\Git\cmd;D:\database\mongodb\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\RabbitMQ Server\rabbitmq_server-3.7.7\sbin;C:\Program Files\erl10.0.1\bin;D:\database\mysql-5.7.23-winx64\bin;D:\nodejs\;D:\scala-2.11.8\bin;C:\Users\49535\AppData\Local\Microsoft\WindowsApps;C:\Users\49535\AppData\Roaming\npm;.]
2018-10-17 10:52:25,239  INFO - [localhost-startStop-1] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]  : Initializing Spring embedded WebApplicationContext
2018-10-17 10:52:25,239  INFO - [localhost-startStop-1] org.springframework.web.context.ContextLoader      : Root WebApplicationContext: initialization completed in 1985 ms
2018-10-17 10:52:25,473  WARN - [localhost-startStop-1] com.netflix.config.sources.URLConfigurationSource  : No URLs will be polled as dynamic configuration sources.
2018-10-17 10:52:25,473  INFO - [localhost-startStop-1] com.netflix.config.sources.URLConfigurationSource  : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-17 10:52:25,489  INFO - [localhost-startStop-1] com.netflix.config.DynamicPropertyFactory          : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3f39c742
2018-10-17 10:52:26,822  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-10-17 10:52:26,822  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'webMvcMetricsFilter' to: [/*]
2018-10-17 10:52:26,822  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-10-17 10:52:26,822  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-10-17 10:52:26,822  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'requestContextFilter' to: [/*]
2018-10-17 10:52:26,822  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'httpTraceFilter' to: [/*]
2018-10-17 10:52:26,822  INFO - [localhost-startStop-1] o.s.boot.web.servlet.ServletRegistrationBean       : Servlet dispatcherServlet mapped to [/]
2018-10-17 10:52:26,868  INFO - [main                 ] o.s.c.a.AnnotationConfigApplicationContext         : Refreshing FeignContext-RIBBONCLIENT: startup date [Wed Oct 17 10:52:26 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@42039326
2018-10-17 10:52:26,884  INFO - [main                 ] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor     : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-10-17 10:52:27,040  WARN - [main                 ] com.netflix.config.sources.URLConfigurationSource  : No URLs will be polled as dynamic configuration sources.
2018-10-17 10:52:27,040  INFO - [main                 ] com.netflix.config.sources.URLConfigurationSource  : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-17 10:52:27,134  INFO - [main                 ] o.s.web.servlet.handler.SimpleUrlHandlerMapping    : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-17 10:52:27,275  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerAdapter         : Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@42039326: startup date [Wed Oct 17 10:52:23 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2accdbb5
2018-10-17 10:52:27,337  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/feign/server],methods=[GET],produces=[application/json]}" onto public java.lang.String com.example.feign.client.controller.FeignConsumerController.server()
2018-10-17 10:52:27,337  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/feign/consumer],methods=[GET],produces=[application/json]}" onto public java.lang.String com.example.feign.client.controller.FeignConsumerController.consumer()
2018-10-17 10:52:27,353  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-10-17 10:52:27,353  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-10-17 10:52:27,384  INFO - [main                 ] o.s.web.servlet.handler.SimpleUrlHandlerMapping    : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-17 10:52:27,384  INFO - [main                 ] o.s.web.servlet.handler.SimpleUrlHandlerMapping    : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-17 10:52:27,915  INFO - [main                 ] o.s.b.actuate.endpoint.web.EndpointLinksResolver   : Exposing 2 endpoint(s) beneath base path '/actuator'
2018-10-17 10:52:27,931  INFO - [main                 ] o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-10-17 10:52:27,931  INFO - [main                 ] o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-10-17 10:52:27,931  INFO - [main                 ] o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-10-17 10:52:27,978  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Registering beans for JMX exposure on startup
2018-10-17 10:52:27,978  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-10-17 10:52:27,978  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-10-17 10:52:27,978  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-10-17 10:52:27,978  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-10-17 10:52:27,993  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-10-17 10:52:28,009  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=42039326,type=ConfigurationPropertiesRebinder]
2018-10-17 10:52:28,009  INFO - [main                 ] o.s.context.support.DefaultLifecycleProcessor      : Starting beans in phase 0
2018-10-17 10:52:28,024  INFO - [main                 ] o.s.cloud.netflix.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2018-10-17 10:52:28,071  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Initializing Eureka in region us-east-1
2018-10-17 10:52:28,259  INFO - [main                 ] c.n.discovery.provider.DiscoveryJerseyProvider     : Using JSON encoding codec LegacyJacksonJson
2018-10-17 10:52:28,259  INFO - [main                 ] c.n.discovery.provider.DiscoveryJerseyProvider     : Using JSON decoding codec LegacyJacksonJson
2018-10-17 10:52:28,415  INFO - [main                 ] c.n.discovery.provider.DiscoveryJerseyProvider     : Using XML encoding codec XStreamXml
2018-10-17 10:52:28,415  INFO - [main                 ] c.n.discovery.provider.DiscoveryJerseyProvider     : Using XML decoding codec XStreamXml
2018-10-17 10:52:28,602  INFO - [main                 ] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 10:52:28,774  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Disable delta property : false
2018-10-17 10:52:28,774  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Single vip registry refresh property : null
2018-10-17 10:52:28,774  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Force full registry fetch : false
2018-10-17 10:52:28,774  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Application is null : false
2018-10-17 10:52:28,774  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Registered Applications size is zero : true
2018-10-17 10:52:28,774  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Application version is -1: true
2018-10-17 10:52:28,774  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Getting all instance registry info from the eureka server
2018-10-17 10:52:28,962  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : The response status is 200
2018-10-17 10:52:28,977  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Starting heartbeat executor: renew interval is: 30
2018-10-17 10:52:28,977  INFO - [main                 ] com.netflix.discovery.InstanceInfoReplicator       : InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-10-17 10:52:28,977  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Discovery Client initialized at timestamp 1539744748977 with initial instances count: 2
2018-10-17 10:52:28,977  INFO - [main                 ] o.s.c.n.e.serviceregistry.EurekaServiceRegistry    : Registering application feignClient with eureka with status UP
2018-10-17 10:52:28,977  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Saw local status change event StatusChangeEvent [timestamp=1539744748977, current=UP, previous=STARTING]
2018-10-17 10:52:28,977  INFO - [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient              : DiscoveryClient_FEIGNCLIENT/LAPTOP-AJOD9Q7O:feignClient:8090: registering service...
2018-10-17 10:52:28,993  INFO - [main                 ] org.apache.coyote.http11.Http11NioProtocol         : Starting ProtocolHandler ["http-nio-8090"]
2018-10-17 10:52:29,009  INFO - [main                 ] org.apache.tomcat.util.net.NioSelectorPool         : Using a shared selector for servlet write/read
2018-10-17 10:52:29,040  INFO - [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient              : DiscoveryClient_FEIGNCLIENT/LAPTOP-AJOD9Q7O:feignClient:8090 - registration status: 204
2018-10-17 10:52:29,040  INFO - [main                 ] o.s.boot.web.embedded.tomcat.TomcatWebServer       : Tomcat started on port(s): 8090 (http) with context path ''
2018-10-17 10:52:29,040  INFO - [main                 ] o.s.c.n.e.s.EurekaAutoServiceRegistration          : Updating port to 8090
2018-10-17 10:52:29,040  INFO - [main                 ] com.example.feign.FeignApplication                 : Started FeignApplication in 7.552 seconds (JVM running for 9.03)
2018-10-17 10:52:51,173  INFO - [http-nio-8090-exec-1 ] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-10-17 10:52:51,173  INFO - [http-nio-8090-exec-1 ] org.springframework.web.servlet.DispatcherServlet  : FrameworkServlet 'dispatcherServlet': initialization started
2018-10-17 10:52:51,203  INFO - [http-nio-8090-exec-1 ] org.springframework.web.servlet.DispatcherServlet  : FrameworkServlet 'dispatcherServlet': initialization completed in 30 ms
2018-10-17 10:54:17,382  INFO - [http-nio-8090-exec-10] o.s.c.a.AnnotationConfigApplicationContext         : Refreshing SpringClientFactory-RIBBONCLIENT: startup date [Wed Oct 17 10:54:17 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@42039326
2018-10-17 10:54:17,479  INFO - [http-nio-8090-exec-10] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor     : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-10-17 10:54:17,750  INFO - [http-nio-8090-exec-10] com.netflix.config.ChainedDynamicProperty          : Flipping property: RIBBONCLIENT.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-10-17 10:54:17,775  INFO - [http-nio-8090-exec-10] com.netflix.util.concurrent.ShutdownEnabledTimer   : Shutdown hook installed for: NFLoadBalancer-PingTimer-RIBBONCLIENT
2018-10-17 10:54:17,805  INFO - [http-nio-8090-exec-10] com.netflix.loadbalancer.BaseLoadBalancer          : Client: RIBBONCLIENT instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=RIBBONCLIENT,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-10-17 10:54:17,811  INFO - [http-nio-8090-exec-10] c.n.loadbalancer.DynamicServerListLoadBalancer     : Using serverListUpdater PollingServerListUpdater
2018-10-17 10:54:17,832  INFO - [http-nio-8090-exec-10] com.netflix.config.ChainedDynamicProperty          : Flipping property: RIBBONCLIENT.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-10-17 10:54:17,834  INFO - [http-nio-8090-exec-10] c.n.loadbalancer.DynamicServerListLoadBalancer     : DynamicServerListLoadBalancer for client RIBBONCLIENT initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=RIBBONCLIENT,current list of Servers=[LAPTOP-AJOD9Q7O:8080],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:LAPTOP-AJOD9Q7O:8080;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@7e483282
2018-10-17 10:54:18,815  INFO - [PollingServerListUpdater-0] com.netflix.config.ChainedDynamicProperty          : Flipping property: RIBBONCLIENT.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-10-17 10:57:28,789  INFO - [AsyncResolver-bootstrap-executor-0] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 11:02:28,805  INFO - [AsyncResolver-bootstrap-executor-0] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 11:07:28,820  INFO - [AsyncResolver-bootstrap-executor-0] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 11:12:28,835  INFO - [AsyncResolver-bootstrap-executor-0] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 11:17:28,842  INFO - [AsyncResolver-bootstrap-executor-0] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 11:22:28,851  INFO - [AsyncResolver-bootstrap-executor-0] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 11:27:28,865  INFO - [AsyncResolver-bootstrap-executor-0] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 11:32:28,875  INFO - [AsyncResolver-bootstrap-executor-0] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 11:37:28,884  INFO - [AsyncResolver-bootstrap-executor-0] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 11:42:28,900  INFO - [AsyncResolver-bootstrap-executor-0] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 11:47:28,912  INFO - [AsyncResolver-bootstrap-executor-0] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 11:52:28,917  INFO - [AsyncResolver-bootstrap-executor-0] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 11:57:28,923  INFO - [AsyncResolver-bootstrap-executor-0] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 12:02:28,926  INFO - [AsyncResolver-bootstrap-executor-0] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 12:07:28,932  INFO - [AsyncResolver-bootstrap-executor-0] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 12:12:28,943  INFO - [AsyncResolver-bootstrap-executor-0] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 12:17:28,945  INFO - [AsyncResolver-bootstrap-executor-0] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 12:22:28,960  INFO - [AsyncResolver-bootstrap-executor-0] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 12:27:28,961  INFO - [AsyncResolver-bootstrap-executor-0] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 12:32:28,964  INFO - [AsyncResolver-bootstrap-executor-0] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 12:32:50,752  INFO - [main                 ] o.s.c.a.AnnotationConfigApplicationContext         : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@306f16f3: startup date [Wed Oct 17 12:32:50 CST 2018]; root of context hierarchy
2018-10-17 12:32:50,924  INFO - [main                 ] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor     : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-10-17 12:32:50,956  INFO - [main                 ] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$32e841b6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-17 12:32:51,315  INFO - [main                 ] com.example.feign.FeignApplication                 : No active profile set, falling back to default profiles: default
2018-10-17 12:32:51,315  INFO - [main                 ] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6e4566f1: startup date [Wed Oct 17 12:32:51 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@306f16f3
2018-10-17 12:32:52,236  INFO - [main                 ] o.springframework.cloud.context.scope.GenericScope : BeanFactory id=18102764-736e-3e96-905a-71bd514e6756
2018-10-17 12:32:52,252  INFO - [main                 ] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor     : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-10-17 12:32:52,377  INFO - [main                 ] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$32e841b6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-17 12:32:53,096  INFO - [main                 ] o.s.boot.web.embedded.tomcat.TomcatWebServer       : Tomcat initialized with port(s): 8090 (http)
2018-10-17 12:32:53,111  INFO - [main                 ] org.apache.coyote.http11.Http11NioProtocol         : Initializing ProtocolHandler ["http-nio-8090"]
2018-10-17 12:32:53,127  INFO - [main                 ] org.apache.catalina.core.StandardService           : Starting service [Tomcat]
2018-10-17 12:32:53,127  INFO - [main                 ] org.apache.catalina.core.StandardEngine            : Starting Servlet Engine: Apache Tomcat/8.5.32
2018-10-17 12:32:53,127  INFO - [localhost-startStop-1] org.apache.catalina.core.AprLifecycleListener      : The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_101\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;%JAVA_HOME%\bin;C:\Program Files\MySQL\MySQL Server 5.5\bin;E:\apache_maven_3.3.9\bin;D:\database\redis\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;D:\Git\cmd;D:\database\mongodb\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\RabbitMQ Server\rabbitmq_server-3.7.7\sbin;C:\Program Files\erl10.0.1\bin;D:\database\mysql-5.7.23-winx64\bin;D:\nodejs\;D:\scala-2.11.8\bin;C:\Users\49535\AppData\Local\Microsoft\WindowsApps;C:\Users\49535\AppData\Roaming\npm;.]
2018-10-17 12:32:53,330  INFO - [localhost-startStop-1] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]  : Initializing Spring embedded WebApplicationContext
2018-10-17 12:32:53,330  INFO - [localhost-startStop-1] org.springframework.web.context.ContextLoader      : Root WebApplicationContext: initialization completed in 2015 ms
2018-10-17 12:32:53,564  WARN - [localhost-startStop-1] com.netflix.config.sources.URLConfigurationSource  : No URLs will be polled as dynamic configuration sources.
2018-10-17 12:32:53,564  INFO - [localhost-startStop-1] com.netflix.config.sources.URLConfigurationSource  : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-17 12:32:53,580  INFO - [localhost-startStop-1] com.netflix.config.DynamicPropertyFactory          : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@18e9098a
2018-10-17 12:32:54,908  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-10-17 12:32:54,908  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'webMvcMetricsFilter' to: [/*]
2018-10-17 12:32:54,908  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-10-17 12:32:54,908  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-10-17 12:32:54,908  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'requestContextFilter' to: [/*]
2018-10-17 12:32:54,908  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'httpTraceFilter' to: [/*]
2018-10-17 12:32:54,908  INFO - [localhost-startStop-1] o.s.boot.web.servlet.ServletRegistrationBean       : Servlet dispatcherServlet mapped to [/]
2018-10-17 12:32:54,955  INFO - [main                 ] o.s.c.a.AnnotationConfigApplicationContext         : Refreshing FeignContext-RIBBONCLIENT: startup date [Wed Oct 17 12:32:54 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6e4566f1
2018-10-17 12:32:54,970  INFO - [main                 ] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor     : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-10-17 12:32:55,126  WARN - [main                 ] com.netflix.config.sources.URLConfigurationSource  : No URLs will be polled as dynamic configuration sources.
2018-10-17 12:32:55,126  INFO - [main                 ] com.netflix.config.sources.URLConfigurationSource  : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-17 12:32:55,205  INFO - [main                 ] o.s.web.servlet.handler.SimpleUrlHandlerMapping    : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-17 12:32:55,376  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerAdapter         : Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6e4566f1: startup date [Wed Oct 17 12:32:51 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@306f16f3
2018-10-17 12:32:55,439  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/feign/server],methods=[GET],produces=[application/json]}" onto public java.lang.String com.example.feign.client.controller.FeignConsumerController.server()
2018-10-17 12:32:55,439  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/feign/consumer],methods=[GET],produces=[application/json]}" onto public java.lang.String com.example.feign.client.controller.FeignConsumerController.consumer()
2018-10-17 12:32:55,454  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-10-17 12:32:55,454  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-10-17 12:32:55,486  INFO - [main                 ] o.s.web.servlet.handler.SimpleUrlHandlerMapping    : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-17 12:32:55,486  INFO - [main                 ] o.s.web.servlet.handler.SimpleUrlHandlerMapping    : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-17 12:32:55,970  INFO - [main                 ] o.s.b.actuate.endpoint.web.EndpointLinksResolver   : Exposing 2 endpoint(s) beneath base path '/actuator'
2018-10-17 12:32:55,970  INFO - [main                 ] o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-10-17 12:32:55,970  INFO - [main                 ] o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-10-17 12:32:55,970  INFO - [main                 ] o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-10-17 12:32:56,017  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Registering beans for JMX exposure on startup
2018-10-17 12:32:56,032  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-10-17 12:32:56,032  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-10-17 12:32:56,032  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-10-17 12:32:56,032  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-10-17 12:32:56,048  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-10-17 12:32:56,048  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=6e4566f1,type=ConfigurationPropertiesRebinder]
2018-10-17 12:32:56,064  INFO - [main                 ] o.s.context.support.DefaultLifecycleProcessor      : Starting beans in phase 0
2018-10-17 12:32:56,079  INFO - [main                 ] o.s.cloud.netflix.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2018-10-17 12:32:56,111  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Initializing Eureka in region us-east-1
2018-10-17 12:32:56,314  INFO - [main                 ] c.n.discovery.provider.DiscoveryJerseyProvider     : Using JSON encoding codec LegacyJacksonJson
2018-10-17 12:32:56,314  INFO - [main                 ] c.n.discovery.provider.DiscoveryJerseyProvider     : Using JSON decoding codec LegacyJacksonJson
2018-10-17 12:32:56,454  INFO - [main                 ] c.n.discovery.provider.DiscoveryJerseyProvider     : Using XML encoding codec XStreamXml
2018-10-17 12:32:56,454  INFO - [main                 ] c.n.discovery.provider.DiscoveryJerseyProvider     : Using XML decoding codec XStreamXml
2018-10-17 12:32:56,626  INFO - [main                 ] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 12:32:56,798  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Disable delta property : false
2018-10-17 12:32:56,798  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Single vip registry refresh property : null
2018-10-17 12:32:56,798  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Force full registry fetch : false
2018-10-17 12:32:56,798  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Application is null : false
2018-10-17 12:32:56,798  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Registered Applications size is zero : true
2018-10-17 12:32:56,798  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Application version is -1: true
2018-10-17 12:32:56,798  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Getting all instance registry info from the eureka server
2018-10-17 12:32:57,017  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : The response status is 200
2018-10-17 12:32:57,017  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Starting heartbeat executor: renew interval is: 30
2018-10-17 12:32:57,017  INFO - [main                 ] com.netflix.discovery.InstanceInfoReplicator       : InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-10-17 12:32:57,017  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Discovery Client initialized at timestamp 1539750777017 with initial instances count: 2
2018-10-17 12:32:57,017  INFO - [main                 ] o.s.c.n.e.serviceregistry.EurekaServiceRegistry    : Registering application feignClient with eureka with status UP
2018-10-17 12:32:57,017  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Saw local status change event StatusChangeEvent [timestamp=1539750777017, current=UP, previous=STARTING]
2018-10-17 12:32:57,032  INFO - [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient              : DiscoveryClient_FEIGNCLIENT/LAPTOP-AJOD9Q7O:feignClient:8090: registering service...
2018-10-17 12:32:57,048  INFO - [main                 ] org.apache.coyote.http11.Http11NioProtocol         : Starting ProtocolHandler ["http-nio-8090"]
2018-10-17 12:32:57,063  INFO - [main                 ] org.apache.tomcat.util.net.NioSelectorPool         : Using a shared selector for servlet write/read
2018-10-17 12:32:57,063  INFO - [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient              : DiscoveryClient_FEIGNCLIENT/LAPTOP-AJOD9Q7O:feignClient:8090 - registration status: 204
2018-10-17 12:32:57,079  INFO - [main                 ] o.s.boot.web.embedded.tomcat.TomcatWebServer       : Tomcat started on port(s): 8090 (http) with context path ''
2018-10-17 12:32:57,079  INFO - [main                 ] o.s.c.n.e.s.EurekaAutoServiceRegistration          : Updating port to 8090
2018-10-17 12:32:57,079  INFO - [main                 ] com.example.feign.FeignApplication                 : Started FeignApplication in 7.358 seconds (JVM running for 8.027)
2018-10-17 12:33:18,458  INFO - [http-nio-8090-exec-2 ] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-10-17 12:33:18,458  INFO - [http-nio-8090-exec-2 ] org.springframework.web.servlet.DispatcherServlet  : FrameworkServlet 'dispatcherServlet': initialization started
2018-10-17 12:33:18,486  INFO - [http-nio-8090-exec-2 ] org.springframework.web.servlet.DispatcherServlet  : FrameworkServlet 'dispatcherServlet': initialization completed in 28 ms
2018-10-17 12:37:56,815  INFO - [AsyncResolver-bootstrap-executor-0] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 12:42:56,824  INFO - [AsyncResolver-bootstrap-executor-0] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 12:47:56,840  INFO - [AsyncResolver-bootstrap-executor-0] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 12:52:56,853  INFO - [AsyncResolver-bootstrap-executor-0] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 12:57:56,855  INFO - [AsyncResolver-bootstrap-executor-0] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 13:02:56,870  INFO - [AsyncResolver-bootstrap-executor-0] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 13:07:56,879  INFO - [AsyncResolver-bootstrap-executor-0] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 13:12:56,881  INFO - [AsyncResolver-bootstrap-executor-0] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 13:17:56,886  INFO - [AsyncResolver-bootstrap-executor-0] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 13:22:56,898  INFO - [AsyncResolver-bootstrap-executor-0] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 13:27:56,900  INFO - [AsyncResolver-bootstrap-executor-0] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 13:28:39,434  INFO - [http-nio-8090-exec-1 ] o.s.c.a.AnnotationConfigApplicationContext         : Refreshing SpringClientFactory-RIBBONCLIENT: startup date [Wed Oct 17 13:28:39 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6e4566f1
2018-10-17 13:28:39,531  INFO - [http-nio-8090-exec-1 ] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor     : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-10-17 13:28:39,802  INFO - [http-nio-8090-exec-1 ] com.netflix.config.ChainedDynamicProperty          : Flipping property: RIBBONCLIENT.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-10-17 13:28:39,827  INFO - [http-nio-8090-exec-1 ] com.netflix.util.concurrent.ShutdownEnabledTimer   : Shutdown hook installed for: NFLoadBalancer-PingTimer-RIBBONCLIENT
2018-10-17 13:28:39,857  INFO - [http-nio-8090-exec-1 ] com.netflix.loadbalancer.BaseLoadBalancer          : Client: RIBBONCLIENT instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=RIBBONCLIENT,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-10-17 13:28:39,867  INFO - [http-nio-8090-exec-1 ] c.n.loadbalancer.DynamicServerListLoadBalancer     : Using serverListUpdater PollingServerListUpdater
2018-10-17 13:28:39,894  INFO - [http-nio-8090-exec-1 ] com.netflix.config.ChainedDynamicProperty          : Flipping property: RIBBONCLIENT.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-10-17 13:28:39,896  INFO - [http-nio-8090-exec-1 ] c.n.loadbalancer.DynamicServerListLoadBalancer     : DynamicServerListLoadBalancer for client RIBBONCLIENT initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=RIBBONCLIENT,current list of Servers=[LAPTOP-AJOD9Q7O:8080],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:LAPTOP-AJOD9Q7O:8080;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@65a42d7f
2018-10-17 13:28:40,874  INFO - [PollingServerListUpdater-0] com.netflix.config.ChainedDynamicProperty          : Flipping property: RIBBONCLIENT.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-10-17 13:28:49,740 ERROR - [http-nio-8090-exec-4 ] o.a.c.c.C.[.[localhost].[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is feign.RetryableException: Read timed out executing GET http://RIBBONCLIENT/ribbon/server] with root cause
java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:170)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:704)
	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:647)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1536)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1441)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)
	at feign.Client$Default.convertResponse(Client.java:152)
	at feign.Client$Default.execute(Client.java:74)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:89)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:55)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy102.consumer(Unknown Source)
	at com.example.feign.client.controller.FeignConsumerController.consumer(FeignConsumerController.java:22)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:155)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:123)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:800)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1471)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2018-10-17 13:28:56,470 ERROR - [http-nio-8090-exec-9 ] o.a.c.c.C.[.[localhost].[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is feign.RetryableException: Read timed out executing GET http://RIBBONCLIENT/ribbon/server] with root cause
java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:170)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:704)
	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:647)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1536)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1441)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)
	at feign.Client$Default.convertResponse(Client.java:152)
	at feign.Client$Default.execute(Client.java:74)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:89)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:55)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy102.consumer(Unknown Source)
	at com.example.feign.client.controller.FeignConsumerController.consumer(FeignConsumerController.java:22)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:155)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:123)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:800)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1471)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2018-10-17 13:29:28,192 ERROR - [http-nio-8090-exec-7 ] o.a.c.c.C.[.[localhost].[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is feign.RetryableException: Read timed out executing GET http://RIBBONCLIENT/ribbon/server] with root cause
java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:170)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:704)
	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:647)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1536)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1441)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)
	at feign.Client$Default.convertResponse(Client.java:152)
	at feign.Client$Default.execute(Client.java:74)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:89)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:55)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy102.consumer(Unknown Source)
	at com.example.feign.client.controller.FeignConsumerController.consumer(FeignConsumerController.java:22)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:155)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:123)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:800)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1471)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2018-10-17 13:31:35,492 ERROR - [http-nio-8090-exec-3 ] o.a.c.c.C.[.[localhost].[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is feign.RetryableException: Read timed out executing GET http://RIBBONCLIENT/ribbon/server] with root cause
java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:170)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:704)
	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:647)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1536)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1441)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)
	at feign.Client$Default.convertResponse(Client.java:152)
	at feign.Client$Default.execute(Client.java:74)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:89)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:55)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy102.consumer(Unknown Source)
	at com.example.feign.client.controller.FeignConsumerController.consumer(FeignConsumerController.java:22)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:155)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:123)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:800)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1471)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2018-10-17 13:32:35,329 ERROR - [http-nio-8090-exec-6 ] o.a.c.c.C.[.[localhost].[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is feign.RetryableException: Read timed out executing GET http://RIBBONCLIENT/ribbon/server] with root cause
java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:170)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:704)
	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:647)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1536)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1441)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)
	at feign.Client$Default.convertResponse(Client.java:152)
	at feign.Client$Default.execute(Client.java:74)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:89)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:55)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy102.consumer(Unknown Source)
	at com.example.feign.client.controller.FeignConsumerController.consumer(FeignConsumerController.java:22)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:155)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:123)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:800)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1471)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2018-10-17 13:32:56,911  INFO - [AsyncResolver-bootstrap-executor-0] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 13:33:15,630 ERROR - [http-nio-8090-exec-8 ] o.a.c.c.C.[.[localhost].[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is feign.RetryableException: Read timed out executing GET http://RIBBONCLIENT/ribbon/server] with root cause
java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:170)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:704)
	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:647)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1536)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1441)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)
	at feign.Client$Default.convertResponse(Client.java:152)
	at feign.Client$Default.execute(Client.java:74)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:89)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:55)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy102.consumer(Unknown Source)
	at com.example.feign.client.controller.FeignConsumerController.consumer(FeignConsumerController.java:22)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:155)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:123)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:800)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1471)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2018-10-17 13:33:17,297 ERROR - [http-nio-8090-exec-7 ] o.a.c.c.C.[.[localhost].[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is feign.RetryableException: Read timed out executing GET http://RIBBONCLIENT/ribbon/server] with root cause
java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:170)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:704)
	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:647)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1536)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1441)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)
	at feign.Client$Default.convertResponse(Client.java:152)
	at feign.Client$Default.execute(Client.java:74)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:89)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:55)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy102.consumer(Unknown Source)
	at com.example.feign.client.controller.FeignConsumerController.consumer(FeignConsumerController.java:22)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:155)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:123)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:800)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1471)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2018-10-17 13:33:18,924 ERROR - [http-nio-8090-exec-10] o.a.c.c.C.[.[localhost].[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is feign.RetryableException: Read timed out executing GET http://RIBBONCLIENT/ribbon/server] with root cause
java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:170)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:704)
	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:647)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1536)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1441)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)
	at feign.Client$Default.convertResponse(Client.java:152)
	at feign.Client$Default.execute(Client.java:74)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:89)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:55)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy102.consumer(Unknown Source)
	at com.example.feign.client.controller.FeignConsumerController.consumer(FeignConsumerController.java:22)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:155)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:123)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:800)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1471)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2018-10-17 13:33:20,617 ERROR - [http-nio-8090-exec-2 ] o.a.c.c.C.[.[localhost].[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is feign.RetryableException: Read timed out executing GET http://RIBBONCLIENT/ribbon/server] with root cause
java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:170)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:704)
	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:647)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1536)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1441)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)
	at feign.Client$Default.convertResponse(Client.java:152)
	at feign.Client$Default.execute(Client.java:74)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:89)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:55)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy102.consumer(Unknown Source)
	at com.example.feign.client.controller.FeignConsumerController.consumer(FeignConsumerController.java:22)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:155)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:123)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:800)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1471)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2018-10-17 13:35:55,996 ERROR - [http-nio-8090-exec-1 ] o.a.c.c.C.[.[localhost].[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is feign.RetryableException: Read timed out executing GET http://RIBBONCLIENT/ribbon/server] with root cause
java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:170)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:704)
	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:647)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1536)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1441)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)
	at feign.Client$Default.convertResponse(Client.java:152)
	at feign.Client$Default.execute(Client.java:74)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:89)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:55)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy102.consumer(Unknown Source)
	at com.example.feign.client.controller.FeignConsumerController.consumer(FeignConsumerController.java:22)
	at sun.reflect.GeneratedMethodAccessor71.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:155)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:123)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:800)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1471)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2018-10-17 13:37:56,916  INFO - [AsyncResolver-bootstrap-executor-0] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 13:38:57,565 ERROR - [http-nio-8090-exec-4 ] o.a.c.c.C.[.[localhost].[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is feign.RetryableException: Read timed out executing GET http://RIBBONCLIENT/ribbon/server] with root cause
java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:170)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:704)
	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:647)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1536)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1441)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)
	at feign.Client$Default.convertResponse(Client.java:152)
	at feign.Client$Default.execute(Client.java:74)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:89)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:55)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy102.consumer(Unknown Source)
	at com.example.feign.client.controller.FeignConsumerController.consumer(FeignConsumerController.java:22)
	at sun.reflect.GeneratedMethodAccessor71.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:155)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:123)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:800)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1471)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2018-10-17 13:42:56,931  INFO - [AsyncResolver-bootstrap-executor-0] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 13:44:42,085  INFO - [main                 ] o.s.c.a.AnnotationConfigApplicationContext         : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@cad498c: startup date [Wed Oct 17 13:44:42 CST 2018]; root of context hierarchy
2018-10-17 13:44:42,303  INFO - [main                 ] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor     : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-10-17 13:44:42,350  INFO - [main                 ] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$9fc1c6ae] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-17 13:44:42,725  INFO - [main                 ] com.example.feign.FeignApplication                 : No active profile set, falling back to default profiles: default
2018-10-17 13:44:42,741  INFO - [main                 ] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@bcef303: startup date [Wed Oct 17 13:44:42 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@cad498c
2018-10-17 13:44:43,647  INFO - [main                 ] o.springframework.cloud.context.scope.GenericScope : BeanFactory id=18102764-736e-3e96-905a-71bd514e6756
2018-10-17 13:44:43,662  INFO - [main                 ] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor     : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-10-17 13:44:43,772  INFO - [main                 ] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$9fc1c6ae] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-17 13:44:44,428  INFO - [main                 ] o.s.boot.web.embedded.tomcat.TomcatWebServer       : Tomcat initialized with port(s): 8090 (http)
2018-10-17 13:44:44,444  INFO - [main                 ] org.apache.coyote.http11.Http11NioProtocol         : Initializing ProtocolHandler ["http-nio-8090"]
2018-10-17 13:44:44,459  INFO - [main                 ] org.apache.catalina.core.StandardService           : Starting service [Tomcat]
2018-10-17 13:44:44,459  INFO - [main                 ] org.apache.catalina.core.StandardEngine            : Starting Servlet Engine: Apache Tomcat/8.5.32
2018-10-17 13:44:44,490  INFO - [localhost-startStop-1] org.apache.catalina.core.AprLifecycleListener      : The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_101\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;%JAVA_HOME%\bin;C:\Program Files\MySQL\MySQL Server 5.5\bin;E:\apache_maven_3.3.9\bin;D:\database\redis\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;D:\Git\cmd;D:\database\mongodb\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\RabbitMQ Server\rabbitmq_server-3.7.7\sbin;C:\Program Files\erl10.0.1\bin;D:\database\mysql-5.7.23-winx64\bin;D:\nodejs\;D:\scala-2.11.8\bin;C:\Users\49535\AppData\Local\Microsoft\WindowsApps;C:\Users\49535\AppData\Roaming\npm;.]
2018-10-17 13:44:44,821  INFO - [localhost-startStop-1] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]  : Initializing Spring embedded WebApplicationContext
2018-10-17 13:44:44,821  INFO - [localhost-startStop-1] org.springframework.web.context.ContextLoader      : Root WebApplicationContext: initialization completed in 2080 ms
2018-10-17 13:44:45,024  WARN - [localhost-startStop-1] com.netflix.config.sources.URLConfigurationSource  : No URLs will be polled as dynamic configuration sources.
2018-10-17 13:44:45,024  INFO - [localhost-startStop-1] com.netflix.config.sources.URLConfigurationSource  : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-17 13:44:45,040  INFO - [localhost-startStop-1] com.netflix.config.DynamicPropertyFactory          : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@453e9f57
2018-10-17 13:44:46,430  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-10-17 13:44:46,430  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'webMvcMetricsFilter' to: [/*]
2018-10-17 13:44:46,430  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-10-17 13:44:46,430  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-10-17 13:44:46,430  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'requestContextFilter' to: [/*]
2018-10-17 13:44:46,430  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'httpTraceFilter' to: [/*]
2018-10-17 13:44:46,430  INFO - [localhost-startStop-1] o.s.boot.web.servlet.ServletRegistrationBean       : Servlet dispatcherServlet mapped to [/]
2018-10-17 13:44:46,477  INFO - [main                 ] o.s.c.a.AnnotationConfigApplicationContext         : Refreshing FeignContext-RIBBONCLIENT: startup date [Wed Oct 17 13:44:46 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@bcef303
2018-10-17 13:44:46,492  INFO - [main                 ] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor     : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-10-17 13:44:46,664  WARN - [main                 ] com.netflix.config.sources.URLConfigurationSource  : No URLs will be polled as dynamic configuration sources.
2018-10-17 13:44:46,664  INFO - [main                 ] com.netflix.config.sources.URLConfigurationSource  : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-17 13:44:46,742  INFO - [main                 ] o.s.web.servlet.handler.SimpleUrlHandlerMapping    : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-17 13:44:46,883  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerAdapter         : Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@bcef303: startup date [Wed Oct 17 13:44:42 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@cad498c
2018-10-17 13:44:46,961  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/feign/server],methods=[GET],produces=[application/json]}" onto public java.lang.String com.example.feign.client.controller.FeignConsumerController.server()
2018-10-17 13:44:46,961  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/feign/consumer],methods=[GET],produces=[application/json]}" onto public java.lang.String com.example.feign.client.controller.FeignConsumerController.consumer()
2018-10-17 13:44:46,961  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-10-17 13:44:46,961  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-10-17 13:44:47,008  INFO - [main                 ] o.s.web.servlet.handler.SimpleUrlHandlerMapping    : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-17 13:44:47,008  INFO - [main                 ] o.s.web.servlet.handler.SimpleUrlHandlerMapping    : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-17 13:44:47,508  INFO - [main                 ] o.s.b.actuate.endpoint.web.EndpointLinksResolver   : Exposing 2 endpoint(s) beneath base path '/actuator'
2018-10-17 13:44:47,524  INFO - [main                 ] o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-10-17 13:44:47,524  INFO - [main                 ] o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-10-17 13:44:47,524  INFO - [main                 ] o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-10-17 13:44:47,570  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Registering beans for JMX exposure on startup
2018-10-17 13:44:47,570  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-10-17 13:44:47,570  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-10-17 13:44:47,570  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-10-17 13:44:47,570  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-10-17 13:44:47,586  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-10-17 13:44:47,602  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=bcef303,type=ConfigurationPropertiesRebinder]
2018-10-17 13:44:47,602  INFO - [main                 ] o.s.context.support.DefaultLifecycleProcessor      : Starting beans in phase 0
2018-10-17 13:44:47,617  INFO - [main                 ] o.s.cloud.netflix.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2018-10-17 13:44:47,664  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Initializing Eureka in region us-east-1
2018-10-17 13:44:47,852  INFO - [main                 ] c.n.discovery.provider.DiscoveryJerseyProvider     : Using JSON encoding codec LegacyJacksonJson
2018-10-17 13:44:47,852  INFO - [main                 ] c.n.discovery.provider.DiscoveryJerseyProvider     : Using JSON decoding codec LegacyJacksonJson
2018-10-17 13:44:47,977  INFO - [main                 ] c.n.discovery.provider.DiscoveryJerseyProvider     : Using XML encoding codec XStreamXml
2018-10-17 13:44:47,977  INFO - [main                 ] c.n.discovery.provider.DiscoveryJerseyProvider     : Using XML decoding codec XStreamXml
2018-10-17 13:44:48,164  INFO - [main                 ] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 13:44:48,336  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Disable delta property : false
2018-10-17 13:44:48,336  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Single vip registry refresh property : null
2018-10-17 13:44:48,336  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Force full registry fetch : false
2018-10-17 13:44:48,336  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Application is null : false
2018-10-17 13:44:48,336  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Registered Applications size is zero : true
2018-10-17 13:44:48,336  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Application version is -1: true
2018-10-17 13:44:48,336  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Getting all instance registry info from the eureka server
2018-10-17 13:44:48,539  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : The response status is 200
2018-10-17 13:44:48,539  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Starting heartbeat executor: renew interval is: 30
2018-10-17 13:44:48,539  INFO - [main                 ] com.netflix.discovery.InstanceInfoReplicator       : InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-10-17 13:44:48,539  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Discovery Client initialized at timestamp 1539755088539 with initial instances count: 2
2018-10-17 13:44:48,539  INFO - [main                 ] o.s.c.n.e.serviceregistry.EurekaServiceRegistry    : Registering application feignClient with eureka with status UP
2018-10-17 13:44:48,539  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Saw local status change event StatusChangeEvent [timestamp=1539755088539, current=UP, previous=STARTING]
2018-10-17 13:44:48,555  INFO - [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient              : DiscoveryClient_FEIGNCLIENT/LAPTOP-AJOD9Q7O:feignClient:8090: registering service...
2018-10-17 13:44:48,570  INFO - [main                 ] org.apache.coyote.http11.Http11NioProtocol         : Starting ProtocolHandler ["http-nio-8090"]
2018-10-17 13:44:48,570  INFO - [main                 ] org.apache.tomcat.util.net.NioSelectorPool         : Using a shared selector for servlet write/read
2018-10-17 13:44:48,586  INFO - [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient              : DiscoveryClient_FEIGNCLIENT/LAPTOP-AJOD9Q7O:feignClient:8090 - registration status: 204
2018-10-17 13:44:48,601  INFO - [main                 ] o.s.boot.web.embedded.tomcat.TomcatWebServer       : Tomcat started on port(s): 8090 (http) with context path ''
2018-10-17 13:44:48,601  INFO - [main                 ] o.s.c.n.e.s.EurekaAutoServiceRegistration          : Updating port to 8090
2018-10-17 13:44:48,601  INFO - [main                 ] com.example.feign.FeignApplication                 : Started FeignApplication in 7.563 seconds (JVM running for 8.26)
2018-10-17 13:45:06,704  INFO - [http-nio-8090-exec-1 ] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-10-17 13:45:06,705  INFO - [http-nio-8090-exec-1 ] org.springframework.web.servlet.DispatcherServlet  : FrameworkServlet 'dispatcherServlet': initialization started
2018-10-17 13:45:06,737  INFO - [http-nio-8090-exec-1 ] org.springframework.web.servlet.DispatcherServlet  : FrameworkServlet 'dispatcherServlet': initialization completed in 32 ms
2018-10-17 13:45:06,792  INFO - [http-nio-8090-exec-1 ] o.s.c.a.AnnotationConfigApplicationContext         : Refreshing SpringClientFactory-RIBBONCLIENT: startup date [Wed Oct 17 13:45:06 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@bcef303
2018-10-17 13:45:06,870  INFO - [http-nio-8090-exec-1 ] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor     : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-10-17 13:45:07,172  INFO - [http-nio-8090-exec-1 ] com.netflix.config.ChainedDynamicProperty          : Flipping property: RIBBONCLIENT.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-10-17 13:45:07,205  INFO - [http-nio-8090-exec-1 ] com.netflix.util.concurrent.ShutdownEnabledTimer   : Shutdown hook installed for: NFLoadBalancer-PingTimer-RIBBONCLIENT
2018-10-17 13:45:07,237  INFO - [http-nio-8090-exec-1 ] com.netflix.loadbalancer.BaseLoadBalancer          : Client: RIBBONCLIENT instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=RIBBONCLIENT,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-10-17 13:45:07,243  INFO - [http-nio-8090-exec-1 ] c.n.loadbalancer.DynamicServerListLoadBalancer     : Using serverListUpdater PollingServerListUpdater
2018-10-17 13:45:07,273  INFO - [http-nio-8090-exec-1 ] com.netflix.config.ChainedDynamicProperty          : Flipping property: RIBBONCLIENT.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-10-17 13:45:07,274  INFO - [http-nio-8090-exec-1 ] c.n.loadbalancer.DynamicServerListLoadBalancer     : DynamicServerListLoadBalancer for client RIBBONCLIENT initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=RIBBONCLIENT,current list of Servers=[LAPTOP-AJOD9Q7O:8080],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:LAPTOP-AJOD9Q7O:8080;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@7e63b922
2018-10-17 13:45:08,250  INFO - [PollingServerListUpdater-0] com.netflix.config.ChainedDynamicProperty          : Flipping property: RIBBONCLIENT.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-10-17 13:45:09,421 ERROR - [http-nio-8090-exec-1 ] o.a.c.c.C.[.[localhost].[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is feign.RetryableException: Read timed out executing GET http://RIBBONCLIENT/ribbon/server] with root cause
java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:170)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:704)
	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:647)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1536)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1441)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)
	at feign.Client$Default.convertResponse(Client.java:152)
	at feign.Client$Default.execute(Client.java:74)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:89)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:55)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy102.server(Unknown Source)
	at com.example.feign.client.controller.FeignConsumerController.consumer(FeignConsumerController.java:22)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:155)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:123)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:800)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1471)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2018-10-17 13:46:47,926 ERROR - [http-nio-8090-exec-3 ] o.a.c.c.C.[.[localhost].[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is feign.RetryableException: Read timed out executing GET http://RIBBONCLIENT/ribbon/server] with root cause
java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:170)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:704)
	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:647)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1536)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1441)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)
	at feign.Client$Default.convertResponse(Client.java:152)
	at feign.Client$Default.execute(Client.java:74)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:89)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:55)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy102.server(Unknown Source)
	at com.example.feign.client.controller.FeignConsumerController.consumer(FeignConsumerController.java:22)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:155)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:123)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:800)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1471)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2018-10-17 13:47:10,914 ERROR - [http-nio-8090-exec-8 ] o.a.c.c.C.[.[localhost].[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is feign.RetryableException: Read timed out executing GET http://RIBBONCLIENT/ribbon/server] with root cause
java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:170)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:704)
	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:647)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1536)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1441)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)
	at feign.Client$Default.convertResponse(Client.java:152)
	at feign.Client$Default.execute(Client.java:74)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:89)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:55)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy102.server(Unknown Source)
	at com.example.feign.client.controller.FeignConsumerController.consumer(FeignConsumerController.java:22)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:155)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:123)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:800)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1471)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2018-10-17 13:47:16,386 ERROR - [http-nio-8090-exec-10] o.a.c.c.C.[.[localhost].[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is feign.RetryableException: Read timed out executing GET http://RIBBONCLIENT/ribbon/server] with root cause
java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:170)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:704)
	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:647)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1536)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1441)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)
	at feign.Client$Default.convertResponse(Client.java:152)
	at feign.Client$Default.execute(Client.java:74)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:89)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:55)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy102.server(Unknown Source)
	at com.example.feign.client.controller.FeignConsumerController.consumer(FeignConsumerController.java:22)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:155)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:123)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:800)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1471)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2018-10-17 13:47:20,252 ERROR - [http-nio-8090-exec-1 ] o.a.c.c.C.[.[localhost].[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is feign.RetryableException: Read timed out executing GET http://RIBBONCLIENT/ribbon/server] with root cause
java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:170)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:704)
	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:647)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1536)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1441)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)
	at feign.Client$Default.convertResponse(Client.java:152)
	at feign.Client$Default.execute(Client.java:74)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:89)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:55)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy102.server(Unknown Source)
	at com.example.feign.client.controller.FeignConsumerController.consumer(FeignConsumerController.java:22)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:155)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:123)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:800)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1471)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2018-10-17 13:49:25,494 ERROR - [http-nio-8090-exec-8 ] o.a.c.c.C.[.[localhost].[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is feign.RetryableException: Read timed out executing GET http://RIBBONCLIENT/ribbon/server] with root cause
java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:170)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:704)
	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:647)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1536)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1441)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)
	at feign.Client$Default.convertResponse(Client.java:152)
	at feign.Client$Default.execute(Client.java:74)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:89)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:55)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy102.server(Unknown Source)
	at com.example.feign.client.controller.FeignConsumerController.consumer(FeignConsumerController.java:22)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:155)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:123)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:800)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1471)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2018-10-17 13:49:48,352  INFO - [AsyncResolver-bootstrap-executor-0] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 13:50:44,857  INFO - [main                 ] o.s.c.a.AnnotationConfigApplicationContext         : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@34f5090e: startup date [Wed Oct 17 13:50:44 CST 2018]; root of context hierarchy
2018-10-17 13:50:45,060  INFO - [main                 ] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor     : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-10-17 13:50:45,091  INFO - [main                 ] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d2a88409] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-17 13:50:45,466  INFO - [main                 ] com.example.feign.FeignApplication                 : No active profile set, falling back to default profiles: default
2018-10-17 13:50:45,482  INFO - [main                 ] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@22356acd: startup date [Wed Oct 17 13:50:45 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@34f5090e
2018-10-17 13:50:46,406  INFO - [main                 ] o.springframework.cloud.context.scope.GenericScope : BeanFactory id=18102764-736e-3e96-905a-71bd514e6756
2018-10-17 13:50:46,422  INFO - [main                 ] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor     : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-10-17 13:50:46,531  INFO - [main                 ] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d2a88409] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-17 13:50:47,213  INFO - [main                 ] o.s.boot.web.embedded.tomcat.TomcatWebServer       : Tomcat initialized with port(s): 8090 (http)
2018-10-17 13:50:47,213  INFO - [main                 ] org.apache.coyote.http11.Http11NioProtocol         : Initializing ProtocolHandler ["http-nio-8090"]
2018-10-17 13:50:47,228  INFO - [main                 ] org.apache.catalina.core.StandardService           : Starting service [Tomcat]
2018-10-17 13:50:47,228  INFO - [main                 ] org.apache.catalina.core.StandardEngine            : Starting Servlet Engine: Apache Tomcat/8.5.32
2018-10-17 13:50:47,244  INFO - [localhost-startStop-1] org.apache.catalina.core.AprLifecycleListener      : The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_101\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;%JAVA_HOME%\bin;C:\Program Files\MySQL\MySQL Server 5.5\bin;E:\apache_maven_3.3.9\bin;D:\database\redis\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;D:\Git\cmd;D:\database\mongodb\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\RabbitMQ Server\rabbitmq_server-3.7.7\sbin;C:\Program Files\erl10.0.1\bin;D:\database\mysql-5.7.23-winx64\bin;D:\nodejs\;D:\scala-2.11.8\bin;C:\Users\49535\AppData\Local\Microsoft\WindowsApps;C:\Users\49535\AppData\Roaming\npm;.]
2018-10-17 13:50:47,494  INFO - [localhost-startStop-1] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]  : Initializing Spring embedded WebApplicationContext
2018-10-17 13:50:47,494  INFO - [localhost-startStop-1] org.springframework.web.context.ContextLoader      : Root WebApplicationContext: initialization completed in 2012 ms
2018-10-17 13:50:47,728  WARN - [localhost-startStop-1] com.netflix.config.sources.URLConfigurationSource  : No URLs will be polled as dynamic configuration sources.
2018-10-17 13:50:47,728  INFO - [localhost-startStop-1] com.netflix.config.sources.URLConfigurationSource  : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-17 13:50:47,744  INFO - [localhost-startStop-1] com.netflix.config.DynamicPropertyFactory          : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@793268ec
2018-10-17 13:50:49,103  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-10-17 13:50:49,103  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'webMvcMetricsFilter' to: [/*]
2018-10-17 13:50:49,103  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-10-17 13:50:49,103  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-10-17 13:50:49,103  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'requestContextFilter' to: [/*]
2018-10-17 13:50:49,103  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'httpTraceFilter' to: [/*]
2018-10-17 13:50:49,103  INFO - [localhost-startStop-1] o.s.boot.web.servlet.ServletRegistrationBean       : Servlet dispatcherServlet mapped to [/]
2018-10-17 13:50:49,150  INFO - [main                 ] o.s.c.a.AnnotationConfigApplicationContext         : Refreshing FeignContext-RIBBONCLIENT: startup date [Wed Oct 17 13:50:49 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@22356acd
2018-10-17 13:50:49,181  INFO - [main                 ] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor     : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-10-17 13:50:49,353  WARN - [main                 ] com.netflix.config.sources.URLConfigurationSource  : No URLs will be polled as dynamic configuration sources.
2018-10-17 13:50:49,353  INFO - [main                 ] com.netflix.config.sources.URLConfigurationSource  : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-17 13:50:49,447  INFO - [main                 ] o.s.web.servlet.handler.SimpleUrlHandlerMapping    : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-17 13:50:49,603  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerAdapter         : Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@22356acd: startup date [Wed Oct 17 13:50:45 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@34f5090e
2018-10-17 13:50:49,665  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/feign/consumer],methods=[GET],produces=[application/json]}" onto public java.lang.String com.example.feign.client.controller.FeignConsumerController.consumer()
2018-10-17 13:50:49,665  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/feign/server],methods=[GET],produces=[application/json]}" onto public java.lang.String com.example.feign.client.controller.FeignConsumerController.server()
2018-10-17 13:50:49,665  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-10-17 13:50:49,665  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-10-17 13:50:49,696  INFO - [main                 ] o.s.web.servlet.handler.SimpleUrlHandlerMapping    : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-17 13:50:49,696  INFO - [main                 ] o.s.web.servlet.handler.SimpleUrlHandlerMapping    : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-17 13:50:50,196  INFO - [main                 ] o.s.b.actuate.endpoint.web.EndpointLinksResolver   : Exposing 2 endpoint(s) beneath base path '/actuator'
2018-10-17 13:50:50,212  INFO - [main                 ] o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-10-17 13:50:50,212  INFO - [main                 ] o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-10-17 13:50:50,212  INFO - [main                 ] o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-10-17 13:50:50,259  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Registering beans for JMX exposure on startup
2018-10-17 13:50:50,259  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-10-17 13:50:50,259  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-10-17 13:50:50,259  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-10-17 13:50:50,259  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-10-17 13:50:50,274  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-10-17 13:50:50,290  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=22356acd,type=ConfigurationPropertiesRebinder]
2018-10-17 13:50:50,290  INFO - [main                 ] o.s.context.support.DefaultLifecycleProcessor      : Starting beans in phase 0
2018-10-17 13:50:50,306  INFO - [main                 ] o.s.cloud.netflix.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2018-10-17 13:50:50,353  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Initializing Eureka in region us-east-1
2018-10-17 13:50:50,524  INFO - [main                 ] c.n.discovery.provider.DiscoveryJerseyProvider     : Using JSON encoding codec LegacyJacksonJson
2018-10-17 13:50:50,524  INFO - [main                 ] c.n.discovery.provider.DiscoveryJerseyProvider     : Using JSON decoding codec LegacyJacksonJson
2018-10-17 13:50:50,665  INFO - [main                 ] c.n.discovery.provider.DiscoveryJerseyProvider     : Using XML encoding codec XStreamXml
2018-10-17 13:50:50,665  INFO - [main                 ] c.n.discovery.provider.DiscoveryJerseyProvider     : Using XML decoding codec XStreamXml
2018-10-17 13:50:50,852  INFO - [main                 ] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 13:50:51,040  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Disable delta property : false
2018-10-17 13:50:51,040  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Single vip registry refresh property : null
2018-10-17 13:50:51,040  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Force full registry fetch : false
2018-10-17 13:50:51,040  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Application is null : false
2018-10-17 13:50:51,040  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Registered Applications size is zero : true
2018-10-17 13:50:51,040  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Application version is -1: true
2018-10-17 13:50:51,040  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Getting all instance registry info from the eureka server
2018-10-17 13:50:51,259  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : The response status is 200
2018-10-17 13:50:51,259  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Starting heartbeat executor: renew interval is: 30
2018-10-17 13:50:51,274  INFO - [main                 ] com.netflix.discovery.InstanceInfoReplicator       : InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-10-17 13:50:51,274  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Discovery Client initialized at timestamp 1539755451274 with initial instances count: 2
2018-10-17 13:50:51,274  INFO - [main                 ] o.s.c.n.e.serviceregistry.EurekaServiceRegistry    : Registering application feignClient with eureka with status UP
2018-10-17 13:50:51,274  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Saw local status change event StatusChangeEvent [timestamp=1539755451274, current=UP, previous=STARTING]
2018-10-17 13:50:51,274  INFO - [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient              : DiscoveryClient_FEIGNCLIENT/LAPTOP-AJOD9Q7O:feignClient:8090: registering service...
2018-10-17 13:50:51,290  INFO - [main                 ] org.apache.coyote.http11.Http11NioProtocol         : Starting ProtocolHandler ["http-nio-8090"]
2018-10-17 13:50:51,305  INFO - [main                 ] org.apache.tomcat.util.net.NioSelectorPool         : Using a shared selector for servlet write/read
2018-10-17 13:50:51,321  INFO - [main                 ] o.s.boot.web.embedded.tomcat.TomcatWebServer       : Tomcat started on port(s): 8090 (http) with context path ''
2018-10-17 13:50:51,321  INFO - [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient              : DiscoveryClient_FEIGNCLIENT/LAPTOP-AJOD9Q7O:feignClient:8090 - registration status: 204
2018-10-17 13:50:51,321  INFO - [main                 ] o.s.c.n.e.s.EurekaAutoServiceRegistration          : Updating port to 8090
2018-10-17 13:50:51,337  INFO - [main                 ] com.example.feign.FeignApplication                 : Started FeignApplication in 7.527 seconds (JVM running for 8.217)
2018-10-17 13:51:20,742  INFO - [http-nio-8090-exec-1 ] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-10-17 13:51:20,743  INFO - [http-nio-8090-exec-1 ] org.springframework.web.servlet.DispatcherServlet  : FrameworkServlet 'dispatcherServlet': initialization started
2018-10-17 13:51:20,774  INFO - [http-nio-8090-exec-1 ] org.springframework.web.servlet.DispatcherServlet  : FrameworkServlet 'dispatcherServlet': initialization completed in 31 ms
2018-10-17 13:51:20,829  INFO - [http-nio-8090-exec-1 ] o.s.c.a.AnnotationConfigApplicationContext         : Refreshing SpringClientFactory-RIBBONCLIENT: startup date [Wed Oct 17 13:51:20 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@22356acd
2018-10-17 13:51:20,903  INFO - [http-nio-8090-exec-1 ] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor     : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-10-17 13:51:21,172  INFO - [http-nio-8090-exec-1 ] com.netflix.config.ChainedDynamicProperty          : Flipping property: RIBBONCLIENT.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-10-17 13:51:21,197  INFO - [http-nio-8090-exec-1 ] com.netflix.util.concurrent.ShutdownEnabledTimer   : Shutdown hook installed for: NFLoadBalancer-PingTimer-RIBBONCLIENT
2018-10-17 13:51:21,226  INFO - [http-nio-8090-exec-1 ] com.netflix.loadbalancer.BaseLoadBalancer          : Client: RIBBONCLIENT instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=RIBBONCLIENT,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-10-17 13:51:21,232  INFO - [http-nio-8090-exec-1 ] c.n.loadbalancer.DynamicServerListLoadBalancer     : Using serverListUpdater PollingServerListUpdater
2018-10-17 13:51:21,256  INFO - [http-nio-8090-exec-1 ] com.netflix.config.ChainedDynamicProperty          : Flipping property: RIBBONCLIENT.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-10-17 13:51:21,259  INFO - [http-nio-8090-exec-1 ] c.n.loadbalancer.DynamicServerListLoadBalancer     : DynamicServerListLoadBalancer for client RIBBONCLIENT initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=RIBBONCLIENT,current list of Servers=[LAPTOP-AJOD9Q7O:8080],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:LAPTOP-AJOD9Q7O:8080;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@201dabbe
2018-10-17 13:51:22,239  INFO - [PollingServerListUpdater-0] com.netflix.config.ChainedDynamicProperty          : Flipping property: RIBBONCLIENT.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-10-17 13:51:23,389 ERROR - [http-nio-8090-exec-1 ] o.a.c.c.C.[.[localhost].[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is feign.RetryableException: Read timed out executing GET http://RIBBONCLIENT/ribbon/server] with root cause
java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:170)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:704)
	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:647)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1536)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1441)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)
	at feign.Client$Default.convertResponse(Client.java:152)
	at feign.Client$Default.execute(Client.java:74)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:89)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:55)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy102.consumer(Unknown Source)
	at com.example.feign.client.controller.FeignConsumerController.consumer(FeignConsumerController.java:22)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:155)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:123)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:800)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1471)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2018-10-17 13:55:46,541  INFO - [main                 ] o.s.c.a.AnnotationConfigApplicationContext         : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1613674b: startup date [Wed Oct 17 13:55:46 CST 2018]; root of context hierarchy
2018-10-17 13:55:46,744  INFO - [main                 ] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor     : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-10-17 13:55:46,776  INFO - [main                 ] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c0506ed8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-17 13:55:47,150  INFO - [main                 ] com.example.feign.FeignApplication                 : No active profile set, falling back to default profiles: default
2018-10-17 13:55:47,166  INFO - [main                 ] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5443d039: startup date [Wed Oct 17 13:55:47 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1613674b
2018-10-17 13:55:48,041  INFO - [main                 ] o.springframework.cloud.context.scope.GenericScope : BeanFactory id=18102764-736e-3e96-905a-71bd514e6756
2018-10-17 13:55:48,056  INFO - [main                 ] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor     : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-10-17 13:55:48,150  INFO - [main                 ] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c0506ed8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-17 13:55:48,822  INFO - [main                 ] o.s.boot.web.embedded.tomcat.TomcatWebServer       : Tomcat initialized with port(s): 8090 (http)
2018-10-17 13:55:48,853  INFO - [main                 ] org.apache.coyote.http11.Http11NioProtocol         : Initializing ProtocolHandler ["http-nio-8090"]
2018-10-17 13:55:48,853  INFO - [main                 ] org.apache.catalina.core.StandardService           : Starting service [Tomcat]
2018-10-17 13:55:48,853  INFO - [main                 ] org.apache.catalina.core.StandardEngine            : Starting Servlet Engine: Apache Tomcat/8.5.32
2018-10-17 13:55:48,869  INFO - [localhost-startStop-1] org.apache.catalina.core.AprLifecycleListener      : The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_101\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;%JAVA_HOME%\bin;C:\Program Files\MySQL\MySQL Server 5.5\bin;E:\apache_maven_3.3.9\bin;D:\database\redis\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;D:\Git\cmd;D:\database\mongodb\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\RabbitMQ Server\rabbitmq_server-3.7.7\sbin;C:\Program Files\erl10.0.1\bin;D:\database\mysql-5.7.23-winx64\bin;D:\nodejs\;D:\scala-2.11.8\bin;C:\Users\49535\AppData\Local\Microsoft\WindowsApps;C:\Users\49535\AppData\Roaming\npm;.]
2018-10-17 13:55:49,072  INFO - [localhost-startStop-1] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]  : Initializing Spring embedded WebApplicationContext
2018-10-17 13:55:49,072  INFO - [localhost-startStop-1] org.springframework.web.context.ContextLoader      : Root WebApplicationContext: initialization completed in 1906 ms
2018-10-17 13:55:49,306  WARN - [localhost-startStop-1] com.netflix.config.sources.URLConfigurationSource  : No URLs will be polled as dynamic configuration sources.
2018-10-17 13:55:49,306  INFO - [localhost-startStop-1] com.netflix.config.sources.URLConfigurationSource  : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-17 13:55:49,322  INFO - [localhost-startStop-1] com.netflix.config.DynamicPropertyFactory          : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3b23bb91
2018-10-17 13:55:50,666  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-10-17 13:55:50,666  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'webMvcMetricsFilter' to: [/*]
2018-10-17 13:55:50,666  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-10-17 13:55:50,666  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-10-17 13:55:50,666  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'requestContextFilter' to: [/*]
2018-10-17 13:55:50,666  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'httpTraceFilter' to: [/*]
2018-10-17 13:55:50,666  INFO - [localhost-startStop-1] o.s.boot.web.servlet.ServletRegistrationBean       : Servlet dispatcherServlet mapped to [/]
2018-10-17 13:55:50,729  INFO - [main                 ] o.s.c.a.AnnotationConfigApplicationContext         : Refreshing FeignContext-RIBBONCLIENT: startup date [Wed Oct 17 13:55:50 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5443d039
2018-10-17 13:55:50,744  INFO - [main                 ] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor     : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-10-17 13:55:50,916  WARN - [main                 ] com.netflix.config.sources.URLConfigurationSource  : No URLs will be polled as dynamic configuration sources.
2018-10-17 13:55:50,916  INFO - [main                 ] com.netflix.config.sources.URLConfigurationSource  : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-17 13:55:51,010  INFO - [main                 ] o.s.web.servlet.handler.SimpleUrlHandlerMapping    : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-17 13:55:51,150  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerAdapter         : Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5443d039: startup date [Wed Oct 17 13:55:47 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1613674b
2018-10-17 13:55:51,213  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/feign/server],methods=[GET],produces=[application/json]}" onto public java.lang.String com.example.feign.client.controller.FeignConsumerController.server()
2018-10-17 13:55:51,213  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/feign/consumer],methods=[GET],produces=[application/json]}" onto public java.lang.String com.example.feign.client.controller.FeignConsumerController.consumer()
2018-10-17 13:55:51,228  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-10-17 13:55:51,228  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-10-17 13:55:51,260  INFO - [main                 ] o.s.web.servlet.handler.SimpleUrlHandlerMapping    : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-17 13:55:51,260  INFO - [main                 ] o.s.web.servlet.handler.SimpleUrlHandlerMapping    : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-17 13:55:51,822  INFO - [main                 ] o.s.b.actuate.endpoint.web.EndpointLinksResolver   : Exposing 2 endpoint(s) beneath base path '/actuator'
2018-10-17 13:55:51,838  INFO - [main                 ] o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-10-17 13:55:51,838  INFO - [main                 ] o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-10-17 13:55:51,838  INFO - [main                 ] o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-10-17 13:55:51,900  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Registering beans for JMX exposure on startup
2018-10-17 13:55:51,900  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-10-17 13:55:51,900  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-10-17 13:55:51,900  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-10-17 13:55:51,900  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-10-17 13:55:51,916  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-10-17 13:55:51,931  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=5443d039,type=ConfigurationPropertiesRebinder]
2018-10-17 13:55:51,947  INFO - [main                 ] o.s.context.support.DefaultLifecycleProcessor      : Starting beans in phase 0
2018-10-17 13:55:51,963  INFO - [main                 ] o.s.cloud.netflix.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2018-10-17 13:55:51,994  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Initializing Eureka in region us-east-1
2018-10-17 13:55:52,166  INFO - [main                 ] c.n.discovery.provider.DiscoveryJerseyProvider     : Using JSON encoding codec LegacyJacksonJson
2018-10-17 13:55:52,166  INFO - [main                 ] c.n.discovery.provider.DiscoveryJerseyProvider     : Using JSON decoding codec LegacyJacksonJson
2018-10-17 13:55:52,291  INFO - [main                 ] c.n.discovery.provider.DiscoveryJerseyProvider     : Using XML encoding codec XStreamXml
2018-10-17 13:55:52,291  INFO - [main                 ] c.n.discovery.provider.DiscoveryJerseyProvider     : Using XML decoding codec XStreamXml
2018-10-17 13:55:52,478  INFO - [main                 ] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 13:55:52,681  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Disable delta property : false
2018-10-17 13:55:52,681  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Single vip registry refresh property : null
2018-10-17 13:55:52,681  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Force full registry fetch : false
2018-10-17 13:55:52,681  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Application is null : false
2018-10-17 13:55:52,681  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Registered Applications size is zero : true
2018-10-17 13:55:52,681  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Application version is -1: true
2018-10-17 13:55:52,681  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Getting all instance registry info from the eureka server
2018-10-17 13:55:52,931  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : The response status is 200
2018-10-17 13:55:52,931  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Starting heartbeat executor: renew interval is: 30
2018-10-17 13:55:52,947  INFO - [main                 ] com.netflix.discovery.InstanceInfoReplicator       : InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-10-17 13:55:52,947  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Discovery Client initialized at timestamp 1539755752947 with initial instances count: 2
2018-10-17 13:55:52,947  INFO - [main                 ] o.s.c.n.e.serviceregistry.EurekaServiceRegistry    : Registering application feignClient with eureka with status UP
2018-10-17 13:55:52,947  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Saw local status change event StatusChangeEvent [timestamp=1539755752947, current=UP, previous=STARTING]
2018-10-17 13:55:52,947  INFO - [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient              : DiscoveryClient_FEIGNCLIENT/LAPTOP-AJOD9Q7O:feignClient:8090: registering service...
2018-10-17 13:55:52,962  INFO - [main                 ] org.apache.coyote.http11.Http11NioProtocol         : Starting ProtocolHandler ["http-nio-8090"]
2018-10-17 13:55:52,978  INFO - [main                 ] org.apache.tomcat.util.net.NioSelectorPool         : Using a shared selector for servlet write/read
2018-10-17 13:55:52,994  INFO - [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient              : DiscoveryClient_FEIGNCLIENT/LAPTOP-AJOD9Q7O:feignClient:8090 - registration status: 204
2018-10-17 13:55:52,994  INFO - [main                 ] o.s.boot.web.embedded.tomcat.TomcatWebServer       : Tomcat started on port(s): 8090 (http) with context path ''
2018-10-17 13:55:52,994  INFO - [main                 ] o.s.c.n.e.s.EurekaAutoServiceRegistration          : Updating port to 8090
2018-10-17 13:55:53,009  INFO - [main                 ] com.example.feign.FeignApplication                 : Started FeignApplication in 7.453 seconds (JVM running for 8.132)
2018-10-17 13:56:06,299  INFO - [http-nio-8090-exec-1 ] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-10-17 13:56:06,299  INFO - [http-nio-8090-exec-1 ] org.springframework.web.servlet.DispatcherServlet  : FrameworkServlet 'dispatcherServlet': initialization started
2018-10-17 13:56:06,331  INFO - [http-nio-8090-exec-1 ] org.springframework.web.servlet.DispatcherServlet  : FrameworkServlet 'dispatcherServlet': initialization completed in 32 ms
2018-10-17 13:56:06,383  INFO - [http-nio-8090-exec-1 ] o.s.c.a.AnnotationConfigApplicationContext         : Refreshing SpringClientFactory-RIBBONCLIENT: startup date [Wed Oct 17 13:56:06 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5443d039
2018-10-17 13:56:06,460  INFO - [http-nio-8090-exec-1 ] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor     : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-10-17 13:56:06,730  INFO - [http-nio-8090-exec-1 ] com.netflix.config.ChainedDynamicProperty          : Flipping property: RIBBONCLIENT.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-10-17 13:56:06,755  INFO - [http-nio-8090-exec-1 ] com.netflix.util.concurrent.ShutdownEnabledTimer   : Shutdown hook installed for: NFLoadBalancer-PingTimer-RIBBONCLIENT
2018-10-17 13:56:06,781  INFO - [http-nio-8090-exec-1 ] com.netflix.loadbalancer.BaseLoadBalancer          : Client: RIBBONCLIENT instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=RIBBONCLIENT,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-10-17 13:56:06,786  INFO - [http-nio-8090-exec-1 ] c.n.loadbalancer.DynamicServerListLoadBalancer     : Using serverListUpdater PollingServerListUpdater
2018-10-17 13:56:06,816  INFO - [http-nio-8090-exec-1 ] com.netflix.config.ChainedDynamicProperty          : Flipping property: RIBBONCLIENT.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-10-17 13:56:06,818  INFO - [http-nio-8090-exec-1 ] c.n.loadbalancer.DynamicServerListLoadBalancer     : DynamicServerListLoadBalancer for client RIBBONCLIENT initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=RIBBONCLIENT,current list of Servers=[LAPTOP-AJOD9Q7O:8080],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:LAPTOP-AJOD9Q7O:8080;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@5b52f272
2018-10-17 13:56:07,794  INFO - [PollingServerListUpdater-0] com.netflix.config.ChainedDynamicProperty          : Flipping property: RIBBONCLIENT.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-10-17 14:00:52,695  INFO - [AsyncResolver-bootstrap-executor-0] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 14:05:03,757  INFO - [main                 ] o.s.c.a.AnnotationConfigApplicationContext         : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@702b8b12: startup date [Wed Oct 17 14:05:03 CST 2018]; root of context hierarchy
2018-10-17 14:05:03,945  INFO - [main                 ] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor     : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-10-17 14:05:03,991  INFO - [main                 ] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e02d6bc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-17 14:05:04,335  INFO - [main                 ] com.example.feign.FeignApplication                 : No active profile set, falling back to default profiles: default
2018-10-17 14:05:04,351  INFO - [main                 ] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4b6e2263: startup date [Wed Oct 17 14:05:04 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@702b8b12
2018-10-17 14:05:05,244  INFO - [main                 ] o.springframework.cloud.context.scope.GenericScope : BeanFactory id=18102764-736e-3e96-905a-71bd514e6756
2018-10-17 14:05:05,259  INFO - [main                 ] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor     : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-10-17 14:05:05,369  INFO - [main                 ] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e02d6bc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-17 14:05:06,119  INFO - [main                 ] o.s.boot.web.embedded.tomcat.TomcatWebServer       : Tomcat initialized with port(s): 8090 (http)
2018-10-17 14:05:06,150  INFO - [main                 ] org.apache.coyote.http11.Http11NioProtocol         : Initializing ProtocolHandler ["http-nio-8090"]
2018-10-17 14:05:06,150  INFO - [main                 ] org.apache.catalina.core.StandardService           : Starting service [Tomcat]
2018-10-17 14:05:06,150  INFO - [main                 ] org.apache.catalina.core.StandardEngine            : Starting Servlet Engine: Apache Tomcat/8.5.32
2018-10-17 14:05:06,165  INFO - [localhost-startStop-1] org.apache.catalina.core.AprLifecycleListener      : The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_101\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;%JAVA_HOME%\bin;C:\Program Files\MySQL\MySQL Server 5.5\bin;E:\apache_maven_3.3.9\bin;D:\database\redis\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;D:\Git\cmd;D:\database\mongodb\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\RabbitMQ Server\rabbitmq_server-3.7.7\sbin;C:\Program Files\erl10.0.1\bin;D:\database\mysql-5.7.23-winx64\bin;D:\nodejs\;D:\scala-2.11.8\bin;C:\Users\49535\AppData\Local\Microsoft\WindowsApps;C:\Users\49535\AppData\Roaming\npm;.]
2018-10-17 14:05:06,400  INFO - [localhost-startStop-1] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]  : Initializing Spring embedded WebApplicationContext
2018-10-17 14:05:06,400  INFO - [localhost-startStop-1] org.springframework.web.context.ContextLoader      : Root WebApplicationContext: initialization completed in 2049 ms
2018-10-17 14:05:06,618  WARN - [localhost-startStop-1] com.netflix.config.sources.URLConfigurationSource  : No URLs will be polled as dynamic configuration sources.
2018-10-17 14:05:06,618  INFO - [localhost-startStop-1] com.netflix.config.sources.URLConfigurationSource  : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-17 14:05:06,650  INFO - [localhost-startStop-1] com.netflix.config.DynamicPropertyFactory          : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@6217673b
2018-10-17 14:05:08,134  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-10-17 14:05:08,134  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'webMvcMetricsFilter' to: [/*]
2018-10-17 14:05:08,134  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-10-17 14:05:08,134  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-10-17 14:05:08,134  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'requestContextFilter' to: [/*]
2018-10-17 14:05:08,134  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'httpTraceFilter' to: [/*]
2018-10-17 14:05:08,134  INFO - [localhost-startStop-1] o.s.boot.web.servlet.ServletRegistrationBean       : Servlet dispatcherServlet mapped to [/]
2018-10-17 14:05:08,181  INFO - [main                 ] o.s.c.a.AnnotationConfigApplicationContext         : Refreshing FeignContext-RIBBONCLIENT: startup date [Wed Oct 17 14:05:08 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4b6e2263
2018-10-17 14:05:08,196  INFO - [main                 ] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor     : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-10-17 14:05:08,384  WARN - [main                 ] com.netflix.config.sources.URLConfigurationSource  : No URLs will be polled as dynamic configuration sources.
2018-10-17 14:05:08,384  INFO - [main                 ] com.netflix.config.sources.URLConfigurationSource  : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-17 14:05:08,462  INFO - [main                 ] o.s.web.servlet.handler.SimpleUrlHandlerMapping    : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-17 14:05:08,618  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerAdapter         : Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4b6e2263: startup date [Wed Oct 17 14:05:04 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@702b8b12
2018-10-17 14:05:08,680  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/feign/server],methods=[GET],produces=[application/json]}" onto public java.lang.String com.example.feign.client.controller.FeignConsumerController.server()
2018-10-17 14:05:08,680  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/feign/consumer],methods=[GET],produces=[application/json]}" onto public java.lang.String com.example.feign.client.controller.FeignConsumerController.consumer()
2018-10-17 14:05:08,696  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-10-17 14:05:08,696  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-10-17 14:05:08,712  INFO - [main                 ] o.s.web.servlet.handler.SimpleUrlHandlerMapping    : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-17 14:05:08,712  INFO - [main                 ] o.s.web.servlet.handler.SimpleUrlHandlerMapping    : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-17 14:05:09,274  INFO - [main                 ] o.s.b.actuate.endpoint.web.EndpointLinksResolver   : Exposing 2 endpoint(s) beneath base path '/actuator'
2018-10-17 14:05:09,274  INFO - [main                 ] o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-10-17 14:05:09,274  INFO - [main                 ] o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-10-17 14:05:09,274  INFO - [main                 ] o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-10-17 14:05:09,321  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Registering beans for JMX exposure on startup
2018-10-17 14:05:09,337  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-10-17 14:05:09,337  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-10-17 14:05:09,337  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-10-17 14:05:09,337  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-10-17 14:05:09,352  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-10-17 14:05:09,352  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=4b6e2263,type=ConfigurationPropertiesRebinder]
2018-10-17 14:05:09,368  INFO - [main                 ] o.s.context.support.DefaultLifecycleProcessor      : Starting beans in phase 0
2018-10-17 14:05:09,383  INFO - [main                 ] o.s.cloud.netflix.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2018-10-17 14:05:09,430  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Initializing Eureka in region us-east-1
2018-10-17 14:05:09,620  INFO - [main                 ] c.n.discovery.provider.DiscoveryJerseyProvider     : Using JSON encoding codec LegacyJacksonJson
2018-10-17 14:05:09,620  INFO - [main                 ] c.n.discovery.provider.DiscoveryJerseyProvider     : Using JSON decoding codec LegacyJacksonJson
2018-10-17 14:05:09,776  INFO - [main                 ] c.n.discovery.provider.DiscoveryJerseyProvider     : Using XML encoding codec XStreamXml
2018-10-17 14:05:09,776  INFO - [main                 ] c.n.discovery.provider.DiscoveryJerseyProvider     : Using XML decoding codec XStreamXml
2018-10-17 14:05:09,963  INFO - [main                 ] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 14:05:10,151  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Disable delta property : false
2018-10-17 14:05:10,151  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Single vip registry refresh property : null
2018-10-17 14:05:10,151  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Force full registry fetch : false
2018-10-17 14:05:10,151  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Application is null : false
2018-10-17 14:05:10,151  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Registered Applications size is zero : true
2018-10-17 14:05:10,151  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Application version is -1: true
2018-10-17 14:05:10,151  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Getting all instance registry info from the eureka server
2018-10-17 14:05:10,354  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : The response status is 200
2018-10-17 14:05:10,354  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Starting heartbeat executor: renew interval is: 30
2018-10-17 14:05:10,354  INFO - [main                 ] com.netflix.discovery.InstanceInfoReplicator       : InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-10-17 14:05:10,354  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Discovery Client initialized at timestamp 1539756310354 with initial instances count: 2
2018-10-17 14:05:10,369  INFO - [main                 ] o.s.c.n.e.serviceregistry.EurekaServiceRegistry    : Registering application feignClient with eureka with status UP
2018-10-17 14:05:10,369  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Saw local status change event StatusChangeEvent [timestamp=1539756310369, current=UP, previous=STARTING]
2018-10-17 14:05:10,369  INFO - [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient              : DiscoveryClient_FEIGNCLIENT/LAPTOP-AJOD9Q7O:feignClient:8090: registering service...
2018-10-17 14:05:10,401  INFO - [main                 ] org.apache.coyote.http11.Http11NioProtocol         : Starting ProtocolHandler ["http-nio-8090"]
2018-10-17 14:05:10,416  INFO - [main                 ] org.apache.tomcat.util.net.NioSelectorPool         : Using a shared selector for servlet write/read
2018-10-17 14:05:10,416  INFO - [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient              : DiscoveryClient_FEIGNCLIENT/LAPTOP-AJOD9Q7O:feignClient:8090 - registration status: 204
2018-10-17 14:05:10,432  INFO - [main                 ] o.s.boot.web.embedded.tomcat.TomcatWebServer       : Tomcat started on port(s): 8090 (http) with context path ''
2018-10-17 14:05:10,432  INFO - [main                 ] o.s.c.n.e.s.EurekaAutoServiceRegistration          : Updating port to 8090
2018-10-17 14:05:10,432  INFO - [main                 ] com.example.feign.FeignApplication                 : Started FeignApplication in 7.784 seconds (JVM running for 8.454)
2018-10-17 14:05:20,832  INFO - [http-nio-8090-exec-1 ] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-10-17 14:05:20,832  INFO - [http-nio-8090-exec-1 ] org.springframework.web.servlet.DispatcherServlet  : FrameworkServlet 'dispatcherServlet': initialization started
2018-10-17 14:05:20,866  INFO - [http-nio-8090-exec-1 ] org.springframework.web.servlet.DispatcherServlet  : FrameworkServlet 'dispatcherServlet': initialization completed in 34 ms
2018-10-17 14:05:20,921  INFO - [http-nio-8090-exec-1 ] o.s.c.a.AnnotationConfigApplicationContext         : Refreshing SpringClientFactory-RIBBONCLIENT: startup date [Wed Oct 17 14:05:20 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4b6e2263
2018-10-17 14:05:20,986  INFO - [http-nio-8090-exec-1 ] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor     : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-10-17 14:05:21,247  INFO - [http-nio-8090-exec-1 ] com.netflix.config.ChainedDynamicProperty          : Flipping property: RIBBONCLIENT.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-10-17 14:05:21,272  INFO - [http-nio-8090-exec-1 ] com.netflix.util.concurrent.ShutdownEnabledTimer   : Shutdown hook installed for: NFLoadBalancer-PingTimer-RIBBONCLIENT
2018-10-17 14:05:21,293  INFO - [http-nio-8090-exec-1 ] com.netflix.loadbalancer.BaseLoadBalancer          : Client: RIBBONCLIENT instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=RIBBONCLIENT,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-10-17 14:05:21,299  INFO - [http-nio-8090-exec-1 ] c.n.loadbalancer.DynamicServerListLoadBalancer     : Using serverListUpdater PollingServerListUpdater
2018-10-17 14:05:21,322  INFO - [http-nio-8090-exec-1 ] com.netflix.config.ChainedDynamicProperty          : Flipping property: RIBBONCLIENT.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-10-17 14:05:21,324  INFO - [http-nio-8090-exec-1 ] c.n.loadbalancer.DynamicServerListLoadBalancer     : DynamicServerListLoadBalancer for client RIBBONCLIENT initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=RIBBONCLIENT,current list of Servers=[LAPTOP-AJOD9Q7O:8080],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:LAPTOP-AJOD9Q7O:8080;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@687440ec
2018-10-17 14:05:22,304  INFO - [PollingServerListUpdater-0] com.netflix.config.ChainedDynamicProperty          : Flipping property: RIBBONCLIENT.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-10-17 14:08:35,652  INFO - [main                 ] o.s.c.a.AnnotationConfigApplicationContext         : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1e6454ec: startup date [Wed Oct 17 14:08:35 CST 2018]; root of context hierarchy
2018-10-17 14:08:35,855  INFO - [main                 ] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor     : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-10-17 14:08:35,886  INFO - [main                 ] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c320360d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-17 14:08:36,246  INFO - [main                 ] com.example.feign.FeignApplication                 : No active profile set, falling back to default profiles: default
2018-10-17 14:08:36,261  INFO - [main                 ] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@41709512: startup date [Wed Oct 17 14:08:36 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1e6454ec
2018-10-17 14:08:37,183  INFO - [main                 ] o.springframework.cloud.context.scope.GenericScope : BeanFactory id=18102764-736e-3e96-905a-71bd514e6756
2018-10-17 14:08:37,198  INFO - [main                 ] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor     : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-10-17 14:08:37,308  INFO - [main                 ] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c320360d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-17 14:08:37,870  INFO - [main                 ] o.s.boot.web.embedded.tomcat.TomcatWebServer       : Tomcat initialized with port(s): 8090 (http)
2018-10-17 14:08:37,886  INFO - [main                 ] org.apache.coyote.http11.Http11NioProtocol         : Initializing ProtocolHandler ["http-nio-8090"]
2018-10-17 14:08:37,901  INFO - [main                 ] org.apache.catalina.core.StandardService           : Starting service [Tomcat]
2018-10-17 14:08:37,901  INFO - [main                 ] org.apache.catalina.core.StandardEngine            : Starting Servlet Engine: Apache Tomcat/8.5.32
2018-10-17 14:08:37,995  INFO - [localhost-startStop-1] org.apache.catalina.core.AprLifecycleListener      : The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_101\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;%JAVA_HOME%\bin;C:\Program Files\MySQL\MySQL Server 5.5\bin;E:\apache_maven_3.3.9\bin;D:\database\redis\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;D:\Git\cmd;D:\database\mongodb\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\RabbitMQ Server\rabbitmq_server-3.7.7\sbin;C:\Program Files\erl10.0.1\bin;D:\database\mysql-5.7.23-winx64\bin;D:\nodejs\;D:\scala-2.11.8\bin;C:\Users\49535\AppData\Local\Microsoft\WindowsApps;C:\Users\49535\AppData\Roaming\npm;.]
2018-10-17 14:08:38,229  INFO - [localhost-startStop-1] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]  : Initializing Spring embedded WebApplicationContext
2018-10-17 14:08:38,229  INFO - [localhost-startStop-1] org.springframework.web.context.ContextLoader      : Root WebApplicationContext: initialization completed in 1968 ms
2018-10-17 14:08:38,464  WARN - [localhost-startStop-1] com.netflix.config.sources.URLConfigurationSource  : No URLs will be polled as dynamic configuration sources.
2018-10-17 14:08:38,464  INFO - [localhost-startStop-1] com.netflix.config.sources.URLConfigurationSource  : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-17 14:08:38,464  INFO - [localhost-startStop-1] com.netflix.config.DynamicPropertyFactory          : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@5b56bd57
2018-10-17 14:08:39,823  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-10-17 14:08:39,823  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'webMvcMetricsFilter' to: [/*]
2018-10-17 14:08:39,823  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-10-17 14:08:39,823  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-10-17 14:08:39,823  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'requestContextFilter' to: [/*]
2018-10-17 14:08:39,823  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'httpTraceFilter' to: [/*]
2018-10-17 14:08:39,823  INFO - [localhost-startStop-1] o.s.boot.web.servlet.ServletRegistrationBean       : Servlet dispatcherServlet mapped to [/]
2018-10-17 14:08:39,885  INFO - [main                 ] o.s.c.a.AnnotationConfigApplicationContext         : Refreshing FeignContext-RIBBONCLIENT: startup date [Wed Oct 17 14:08:39 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@41709512
2018-10-17 14:08:39,901  INFO - [main                 ] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor     : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-10-17 14:08:40,104  WARN - [main                 ] com.netflix.config.sources.URLConfigurationSource  : No URLs will be polled as dynamic configuration sources.
2018-10-17 14:08:40,104  INFO - [main                 ] com.netflix.config.sources.URLConfigurationSource  : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-17 14:08:40,213  INFO - [main                 ] o.s.web.servlet.handler.SimpleUrlHandlerMapping    : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-17 14:08:40,370  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerAdapter         : Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@41709512: startup date [Wed Oct 17 14:08:36 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1e6454ec
2018-10-17 14:08:40,448  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/feign/server],methods=[GET],produces=[application/json]}" onto public java.lang.String com.example.feign.client.controller.FeignConsumerController.server()
2018-10-17 14:08:40,448  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/feign/consumer],methods=[GET],produces=[application/json]}" onto public java.lang.String com.example.feign.client.controller.FeignConsumerController.consumer()
2018-10-17 14:08:40,448  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-10-17 14:08:40,448  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-10-17 14:08:40,479  INFO - [main                 ] o.s.web.servlet.handler.SimpleUrlHandlerMapping    : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-17 14:08:40,479  INFO - [main                 ] o.s.web.servlet.handler.SimpleUrlHandlerMapping    : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-17 14:08:41,026  INFO - [main                 ] o.s.b.actuate.endpoint.web.EndpointLinksResolver   : Exposing 2 endpoint(s) beneath base path '/actuator'
2018-10-17 14:08:41,026  INFO - [main                 ] o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-10-17 14:08:41,026  INFO - [main                 ] o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-10-17 14:08:41,026  INFO - [main                 ] o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-10-17 14:08:41,073  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Registering beans for JMX exposure on startup
2018-10-17 14:08:41,088  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-10-17 14:08:41,088  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-10-17 14:08:41,088  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-10-17 14:08:41,088  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-10-17 14:08:41,104  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-10-17 14:08:41,104  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=41709512,type=ConfigurationPropertiesRebinder]
2018-10-17 14:08:41,119  INFO - [main                 ] o.s.context.support.DefaultLifecycleProcessor      : Starting beans in phase 0
2018-10-17 14:08:41,135  INFO - [main                 ] o.s.cloud.netflix.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2018-10-17 14:08:41,182  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Initializing Eureka in region us-east-1
2018-10-17 14:08:41,354  INFO - [main                 ] c.n.discovery.provider.DiscoveryJerseyProvider     : Using JSON encoding codec LegacyJacksonJson
2018-10-17 14:08:41,354  INFO - [main                 ] c.n.discovery.provider.DiscoveryJerseyProvider     : Using JSON decoding codec LegacyJacksonJson
2018-10-17 14:08:41,494  INFO - [main                 ] c.n.discovery.provider.DiscoveryJerseyProvider     : Using XML encoding codec XStreamXml
2018-10-17 14:08:41,494  INFO - [main                 ] c.n.discovery.provider.DiscoveryJerseyProvider     : Using XML decoding codec XStreamXml
2018-10-17 14:08:41,682  INFO - [main                 ] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 14:08:41,885  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Disable delta property : false
2018-10-17 14:08:41,885  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Single vip registry refresh property : null
2018-10-17 14:08:41,885  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Force full registry fetch : false
2018-10-17 14:08:41,885  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Application is null : false
2018-10-17 14:08:41,885  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Registered Applications size is zero : true
2018-10-17 14:08:41,885  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Application version is -1: true
2018-10-17 14:08:41,885  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Getting all instance registry info from the eureka server
2018-10-17 14:08:42,088  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : The response status is 200
2018-10-17 14:08:42,088  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Starting heartbeat executor: renew interval is: 30
2018-10-17 14:08:42,088  INFO - [main                 ] com.netflix.discovery.InstanceInfoReplicator       : InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-10-17 14:08:42,088  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Discovery Client initialized at timestamp 1539756522088 with initial instances count: 2
2018-10-17 14:08:42,104  INFO - [main                 ] o.s.c.n.e.serviceregistry.EurekaServiceRegistry    : Registering application feignClient with eureka with status UP
2018-10-17 14:08:42,104  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Saw local status change event StatusChangeEvent [timestamp=1539756522104, current=UP, previous=STARTING]
2018-10-17 14:08:42,104  INFO - [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient              : DiscoveryClient_FEIGNCLIENT/LAPTOP-AJOD9Q7O:feignClient:8090: registering service...
2018-10-17 14:08:42,119  INFO - [main                 ] org.apache.coyote.http11.Http11NioProtocol         : Starting ProtocolHandler ["http-nio-8090"]
2018-10-17 14:08:42,135  INFO - [main                 ] org.apache.tomcat.util.net.NioSelectorPool         : Using a shared selector for servlet write/read
2018-10-17 14:08:42,135  INFO - [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient              : DiscoveryClient_FEIGNCLIENT/LAPTOP-AJOD9Q7O:feignClient:8090 - registration status: 204
2018-10-17 14:08:42,150  INFO - [main                 ] o.s.boot.web.embedded.tomcat.TomcatWebServer       : Tomcat started on port(s): 8090 (http) with context path ''
2018-10-17 14:08:42,150  INFO - [main                 ] o.s.c.n.e.s.EurekaAutoServiceRegistration          : Updating port to 8090
2018-10-17 14:08:42,166  INFO - [main                 ] com.example.feign.FeignApplication                 : Started FeignApplication in 7.547 seconds (JVM running for 8.243)
2018-10-17 14:09:01,666  INFO - [http-nio-8090-exec-1 ] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-10-17 14:09:01,667  INFO - [http-nio-8090-exec-1 ] org.springframework.web.servlet.DispatcherServlet  : FrameworkServlet 'dispatcherServlet': initialization started
2018-10-17 14:09:01,697  INFO - [http-nio-8090-exec-1 ] org.springframework.web.servlet.DispatcherServlet  : FrameworkServlet 'dispatcherServlet': initialization completed in 30 ms
2018-10-17 14:09:01,745  INFO - [http-nio-8090-exec-1 ] o.s.c.a.AnnotationConfigApplicationContext         : Refreshing SpringClientFactory-RIBBONCLIENT: startup date [Wed Oct 17 14:09:01 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@41709512
2018-10-17 14:09:01,833  INFO - [http-nio-8090-exec-1 ] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor     : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-10-17 14:09:02,081  INFO - [http-nio-8090-exec-1 ] com.netflix.config.ChainedDynamicProperty          : Flipping property: RIBBONCLIENT.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-10-17 14:09:02,109  INFO - [http-nio-8090-exec-1 ] com.netflix.util.concurrent.ShutdownEnabledTimer   : Shutdown hook installed for: NFLoadBalancer-PingTimer-RIBBONCLIENT
2018-10-17 14:09:02,139  INFO - [http-nio-8090-exec-1 ] com.netflix.loadbalancer.BaseLoadBalancer          : Client: RIBBONCLIENT instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=RIBBONCLIENT,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-10-17 14:09:02,147  INFO - [http-nio-8090-exec-1 ] c.n.loadbalancer.DynamicServerListLoadBalancer     : Using serverListUpdater PollingServerListUpdater
2018-10-17 14:09:02,170  INFO - [http-nio-8090-exec-1 ] com.netflix.config.ChainedDynamicProperty          : Flipping property: RIBBONCLIENT.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-10-17 14:09:02,171  INFO - [http-nio-8090-exec-1 ] c.n.loadbalancer.DynamicServerListLoadBalancer     : DynamicServerListLoadBalancer for client RIBBONCLIENT initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=RIBBONCLIENT,current list of Servers=[LAPTOP-AJOD9Q7O:8080],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:LAPTOP-AJOD9Q7O:8080;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@58e65d9e
2018-10-17 14:09:03,150  INFO - [PollingServerListUpdater-0] com.netflix.config.ChainedDynamicProperty          : Flipping property: RIBBONCLIENT.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-10-17 14:13:41,890  INFO - [AsyncResolver-bootstrap-executor-0] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 14:16:25,667  INFO - [main                 ] o.s.c.a.AnnotationConfigApplicationContext         : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@49912c99: startup date [Wed Oct 17 14:16:25 CST 2018]; root of context hierarchy
2018-10-17 14:16:25,886  INFO - [main                 ] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor     : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-10-17 14:16:25,917  INFO - [main                 ] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ba83b1d7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-17 14:16:26,308  INFO - [main                 ] com.example.feign.FeignApplication                 : No active profile set, falling back to default profiles: default
2018-10-17 14:16:26,324  INFO - [main                 ] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1b7c473a: startup date [Wed Oct 17 14:16:26 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@49912c99
2018-10-17 14:16:27,214  INFO - [main                 ] o.springframework.cloud.context.scope.GenericScope : BeanFactory id=18102764-736e-3e96-905a-71bd514e6756
2018-10-17 14:16:27,230  INFO - [main                 ] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor     : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-10-17 14:16:27,323  INFO - [main                 ] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ba83b1d7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-17 14:16:28,011  INFO - [main                 ] o.s.boot.web.embedded.tomcat.TomcatWebServer       : Tomcat initialized with port(s): 8090 (http)
2018-10-17 14:16:28,026  INFO - [main                 ] org.apache.coyote.http11.Http11NioProtocol         : Initializing ProtocolHandler ["http-nio-8090"]
2018-10-17 14:16:28,026  INFO - [main                 ] org.apache.catalina.core.StandardService           : Starting service [Tomcat]
2018-10-17 14:16:28,026  INFO - [main                 ] org.apache.catalina.core.StandardEngine            : Starting Servlet Engine: Apache Tomcat/8.5.32
2018-10-17 14:16:28,042  INFO - [localhost-startStop-1] org.apache.catalina.core.AprLifecycleListener      : The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_101\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;%JAVA_HOME%\bin;C:\Program Files\MySQL\MySQL Server 5.5\bin;E:\apache_maven_3.3.9\bin;D:\database\redis\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;D:\Git\cmd;D:\database\mongodb\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\RabbitMQ Server\rabbitmq_server-3.7.7\sbin;C:\Program Files\erl10.0.1\bin;D:\database\mysql-5.7.23-winx64\bin;D:\nodejs\;D:\scala-2.11.8\bin;C:\Users\49535\AppData\Local\Microsoft\WindowsApps;C:\Users\49535\AppData\Roaming\npm;.]
2018-10-17 14:16:28,261  INFO - [localhost-startStop-1] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]  : Initializing Spring embedded WebApplicationContext
2018-10-17 14:16:28,261  INFO - [localhost-startStop-1] org.springframework.web.context.ContextLoader      : Root WebApplicationContext: initialization completed in 1937 ms
2018-10-17 14:16:28,479  WARN - [localhost-startStop-1] com.netflix.config.sources.URLConfigurationSource  : No URLs will be polled as dynamic configuration sources.
2018-10-17 14:16:28,479  INFO - [localhost-startStop-1] com.netflix.config.sources.URLConfigurationSource  : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-17 14:16:28,511  INFO - [localhost-startStop-1] com.netflix.config.DynamicPropertyFactory          : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@73f8a746
2018-10-17 14:16:29,847  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-10-17 14:16:29,847  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'webMvcMetricsFilter' to: [/*]
2018-10-17 14:16:29,847  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-10-17 14:16:29,847  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-10-17 14:16:29,847  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'requestContextFilter' to: [/*]
2018-10-17 14:16:29,847  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'httpTraceFilter' to: [/*]
2018-10-17 14:16:29,847  INFO - [localhost-startStop-1] o.s.boot.web.servlet.ServletRegistrationBean       : Servlet dispatcherServlet mapped to [/]
2018-10-17 14:16:29,910  INFO - [main                 ] o.s.c.a.AnnotationConfigApplicationContext         : Refreshing FeignContext-RIBBONCLIENT: startup date [Wed Oct 17 14:16:29 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1b7c473a
2018-10-17 14:16:29,925  INFO - [main                 ] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor     : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-10-17 14:16:30,113  WARN - [main                 ] com.netflix.config.sources.URLConfigurationSource  : No URLs will be polled as dynamic configuration sources.
2018-10-17 14:16:30,113  INFO - [main                 ] com.netflix.config.sources.URLConfigurationSource  : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-17 14:16:30,206  INFO - [main                 ] o.s.web.servlet.handler.SimpleUrlHandlerMapping    : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-17 14:16:30,363  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerAdapter         : Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1b7c473a: startup date [Wed Oct 17 14:16:26 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@49912c99
2018-10-17 14:16:30,425  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/feign/server],methods=[GET],produces=[application/json]}" onto public java.lang.String com.example.feign.client.controller.FeignConsumerController.server()
2018-10-17 14:16:30,441  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/feign/consumer],methods=[GET],produces=[application/json]}" onto public java.lang.String com.example.feign.client.controller.FeignConsumerController.consumer()
2018-10-17 14:16:30,441  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-10-17 14:16:30,441  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-10-17 14:16:30,472  INFO - [main                 ] o.s.web.servlet.handler.SimpleUrlHandlerMapping    : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-17 14:16:30,472  INFO - [main                 ] o.s.web.servlet.handler.SimpleUrlHandlerMapping    : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-17 14:16:30,956  INFO - [main                 ] o.s.b.actuate.endpoint.web.EndpointLinksResolver   : Exposing 2 endpoint(s) beneath base path '/actuator'
2018-10-17 14:16:30,972  INFO - [main                 ] o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-10-17 14:16:30,972  INFO - [main                 ] o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-10-17 14:16:30,972  INFO - [main                 ] o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-10-17 14:16:31,019  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Registering beans for JMX exposure on startup
2018-10-17 14:16:31,034  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-10-17 14:16:31,034  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-10-17 14:16:31,034  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-10-17 14:16:31,050  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-10-17 14:16:31,050  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-10-17 14:16:31,065  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=1b7c473a,type=ConfigurationPropertiesRebinder]
2018-10-17 14:16:31,081  INFO - [main                 ] o.s.context.support.DefaultLifecycleProcessor      : Starting beans in phase 0
2018-10-17 14:16:31,097  INFO - [main                 ] o.s.cloud.netflix.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2018-10-17 14:16:31,144  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Initializing Eureka in region us-east-1
2018-10-17 14:16:31,347  INFO - [main                 ] c.n.discovery.provider.DiscoveryJerseyProvider     : Using JSON encoding codec LegacyJacksonJson
2018-10-17 14:16:31,347  INFO - [main                 ] c.n.discovery.provider.DiscoveryJerseyProvider     : Using JSON decoding codec LegacyJacksonJson
2018-10-17 14:16:31,487  INFO - [main                 ] c.n.discovery.provider.DiscoveryJerseyProvider     : Using XML encoding codec XStreamXml
2018-10-17 14:16:31,487  INFO - [main                 ] c.n.discovery.provider.DiscoveryJerseyProvider     : Using XML decoding codec XStreamXml
2018-10-17 14:16:31,675  INFO - [main                 ] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 14:16:31,847  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Disable delta property : false
2018-10-17 14:16:31,847  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Single vip registry refresh property : null
2018-10-17 14:16:31,847  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Force full registry fetch : false
2018-10-17 14:16:31,847  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Application is null : false
2018-10-17 14:16:31,847  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Registered Applications size is zero : true
2018-10-17 14:16:31,847  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Application version is -1: true
2018-10-17 14:16:31,847  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Getting all instance registry info from the eureka server
2018-10-17 14:16:32,050  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : The response status is 200
2018-10-17 14:16:32,050  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Starting heartbeat executor: renew interval is: 30
2018-10-17 14:16:32,065  INFO - [main                 ] com.netflix.discovery.InstanceInfoReplicator       : InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-10-17 14:16:32,081  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Discovery Client initialized at timestamp 1539756992065 with initial instances count: 2
2018-10-17 14:16:32,081  INFO - [main                 ] o.s.c.n.e.serviceregistry.EurekaServiceRegistry    : Registering application feignClient with eureka with status UP
2018-10-17 14:16:32,081  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Saw local status change event StatusChangeEvent [timestamp=1539756992081, current=UP, previous=STARTING]
2018-10-17 14:16:32,081  INFO - [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient              : DiscoveryClient_FEIGNCLIENT/LAPTOP-AJOD9Q7O:feignClient:8090: registering service...
2018-10-17 14:16:32,097  INFO - [main                 ] org.apache.coyote.http11.Http11NioProtocol         : Starting ProtocolHandler ["http-nio-8090"]
2018-10-17 14:16:32,112  INFO - [main                 ] org.apache.tomcat.util.net.NioSelectorPool         : Using a shared selector for servlet write/read
2018-10-17 14:16:32,112  INFO - [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient              : DiscoveryClient_FEIGNCLIENT/LAPTOP-AJOD9Q7O:feignClient:8090 - registration status: 204
2018-10-17 14:16:32,128  INFO - [main                 ] o.s.boot.web.embedded.tomcat.TomcatWebServer       : Tomcat started on port(s): 8090 (http) with context path ''
2018-10-17 14:16:32,128  INFO - [main                 ] o.s.c.n.e.s.EurekaAutoServiceRegistration          : Updating port to 8090
2018-10-17 14:16:32,128  INFO - [main                 ] com.example.feign.FeignApplication                 : Started FeignApplication in 7.509 seconds (JVM running for 8.229)
2018-10-17 14:16:39,352  INFO - [http-nio-8090-exec-1 ] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-10-17 14:16:39,353  INFO - [http-nio-8090-exec-1 ] org.springframework.web.servlet.DispatcherServlet  : FrameworkServlet 'dispatcherServlet': initialization started
2018-10-17 14:16:39,387  INFO - [http-nio-8090-exec-1 ] org.springframework.web.servlet.DispatcherServlet  : FrameworkServlet 'dispatcherServlet': initialization completed in 34 ms
2018-10-17 14:16:39,445  INFO - [http-nio-8090-exec-1 ] o.s.c.a.AnnotationConfigApplicationContext         : Refreshing SpringClientFactory-RIBBONCLIENT: startup date [Wed Oct 17 14:16:39 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1b7c473a
2018-10-17 14:16:39,523  INFO - [http-nio-8090-exec-1 ] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor     : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-10-17 14:16:39,782  INFO - [http-nio-8090-exec-1 ] com.netflix.config.ChainedDynamicProperty          : Flipping property: RIBBONCLIENT.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-10-17 14:16:39,813  INFO - [http-nio-8090-exec-1 ] com.netflix.util.concurrent.ShutdownEnabledTimer   : Shutdown hook installed for: NFLoadBalancer-PingTimer-RIBBONCLIENT
2018-10-17 14:16:39,843  INFO - [http-nio-8090-exec-1 ] com.netflix.loadbalancer.BaseLoadBalancer          : Client: RIBBONCLIENT instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=RIBBONCLIENT,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-10-17 14:16:39,850  INFO - [http-nio-8090-exec-1 ] c.n.loadbalancer.DynamicServerListLoadBalancer     : Using serverListUpdater PollingServerListUpdater
2018-10-17 14:16:39,879  INFO - [http-nio-8090-exec-1 ] com.netflix.config.ChainedDynamicProperty          : Flipping property: RIBBONCLIENT.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-10-17 14:16:39,882  INFO - [http-nio-8090-exec-1 ] c.n.loadbalancer.DynamicServerListLoadBalancer     : DynamicServerListLoadBalancer for client RIBBONCLIENT initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=RIBBONCLIENT,current list of Servers=[LAPTOP-AJOD9Q7O:8080],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:LAPTOP-AJOD9Q7O:8080;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@477f13db
2018-10-17 14:16:40,855  INFO - [PollingServerListUpdater-0] com.netflix.config.ChainedDynamicProperty          : Flipping property: RIBBONCLIENT.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-10-17 14:21:31,868  INFO - [AsyncResolver-bootstrap-executor-0] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 14:23:03,057  INFO - [main                 ] o.s.c.a.AnnotationConfigApplicationContext         : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@120f102b: startup date [Wed Oct 17 14:23:03 CST 2018]; root of context hierarchy
2018-10-17 14:23:03,260  INFO - [main                 ] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor     : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-10-17 14:23:03,291  INFO - [main                 ] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a4d338ae] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-17 14:23:03,650  INFO - [main                 ] com.example.feign.FeignApplication                 : No active profile set, falling back to default profiles: default
2018-10-17 14:23:03,681  INFO - [main                 ] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@8ad6665: startup date [Wed Oct 17 14:23:03 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@120f102b
2018-10-17 14:23:04,572  INFO - [main                 ] o.springframework.cloud.context.scope.GenericScope : BeanFactory id=18102764-736e-3e96-905a-71bd514e6756
2018-10-17 14:23:04,587  INFO - [main                 ] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor     : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-10-17 14:23:04,712  INFO - [main                 ] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a4d338ae] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-17 14:23:05,401  INFO - [main                 ] o.s.boot.web.embedded.tomcat.TomcatWebServer       : Tomcat initialized with port(s): 8090 (http)
2018-10-17 14:23:05,417  INFO - [main                 ] org.apache.coyote.http11.Http11NioProtocol         : Initializing ProtocolHandler ["http-nio-8090"]
2018-10-17 14:23:05,433  INFO - [main                 ] org.apache.catalina.core.StandardService           : Starting service [Tomcat]
2018-10-17 14:23:05,433  INFO - [main                 ] org.apache.catalina.core.StandardEngine            : Starting Servlet Engine: Apache Tomcat/8.5.32
2018-10-17 14:23:05,448  INFO - [localhost-startStop-1] org.apache.catalina.core.AprLifecycleListener      : The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_101\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;%JAVA_HOME%\bin;C:\Program Files\MySQL\MySQL Server 5.5\bin;E:\apache_maven_3.3.9\bin;D:\database\redis\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;D:\Git\cmd;D:\database\mongodb\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\RabbitMQ Server\rabbitmq_server-3.7.7\sbin;C:\Program Files\erl10.0.1\bin;D:\database\mysql-5.7.23-winx64\bin;D:\nodejs\;D:\scala-2.11.8\bin;C:\Users\49535\AppData\Local\Microsoft\WindowsApps;C:\Users\49535\AppData\Roaming\npm;.]
2018-10-17 14:23:05,651  INFO - [localhost-startStop-1] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]  : Initializing Spring embedded WebApplicationContext
2018-10-17 14:23:05,651  INFO - [localhost-startStop-1] org.springframework.web.context.ContextLoader      : Root WebApplicationContext: initialization completed in 1970 ms
2018-10-17 14:23:05,901  WARN - [localhost-startStop-1] com.netflix.config.sources.URLConfigurationSource  : No URLs will be polled as dynamic configuration sources.
2018-10-17 14:23:05,901  INFO - [localhost-startStop-1] com.netflix.config.sources.URLConfigurationSource  : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-17 14:23:05,917  INFO - [localhost-startStop-1] com.netflix.config.DynamicPropertyFactory          : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@2265fbb7
2018-10-17 14:23:07,276  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-10-17 14:23:07,276  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'webMvcMetricsFilter' to: [/*]
2018-10-17 14:23:07,276  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-10-17 14:23:07,276  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-10-17 14:23:07,276  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'requestContextFilter' to: [/*]
2018-10-17 14:23:07,276  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'httpTraceFilter' to: [/*]
2018-10-17 14:23:07,276  INFO - [localhost-startStop-1] o.s.boot.web.servlet.ServletRegistrationBean       : Servlet dispatcherServlet mapped to [/]
2018-10-17 14:23:07,338  INFO - [main                 ] o.s.c.a.AnnotationConfigApplicationContext         : Refreshing FeignContext-RIBBONCLIENT: startup date [Wed Oct 17 14:23:07 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@8ad6665
2018-10-17 14:23:07,354  INFO - [main                 ] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor     : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-10-17 14:23:07,604  WARN - [main                 ] com.netflix.config.sources.URLConfigurationSource  : No URLs will be polled as dynamic configuration sources.
2018-10-17 14:23:07,604  INFO - [main                 ] com.netflix.config.sources.URLConfigurationSource  : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-17 14:23:07,698  INFO - [main                 ] o.s.web.servlet.handler.SimpleUrlHandlerMapping    : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-17 14:23:07,854  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerAdapter         : Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@8ad6665: startup date [Wed Oct 17 14:23:03 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@120f102b
2018-10-17 14:23:07,916  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/feign/server],methods=[GET],produces=[application/json]}" onto public java.lang.String com.example.feign.client.controller.FeignConsumerController.server()
2018-10-17 14:23:07,916  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/feign/consumer],methods=[GET],produces=[application/json]}" onto public java.lang.String com.example.feign.client.controller.FeignConsumerController.consumer()
2018-10-17 14:23:07,932  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-10-17 14:23:07,932  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-10-17 14:23:07,979  INFO - [main                 ] o.s.web.servlet.handler.SimpleUrlHandlerMapping    : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-17 14:23:07,979  INFO - [main                 ] o.s.web.servlet.handler.SimpleUrlHandlerMapping    : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-17 14:23:08,510  INFO - [main                 ] o.s.b.actuate.endpoint.web.EndpointLinksResolver   : Exposing 2 endpoint(s) beneath base path '/actuator'
2018-10-17 14:23:08,526  INFO - [main                 ] o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-10-17 14:23:08,526  INFO - [main                 ] o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-10-17 14:23:08,526  INFO - [main                 ] o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-10-17 14:23:08,572  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Registering beans for JMX exposure on startup
2018-10-17 14:23:08,588  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-10-17 14:23:08,588  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-10-17 14:23:08,588  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-10-17 14:23:08,588  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-10-17 14:23:08,604  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-10-17 14:23:08,619  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=8ad6665,type=ConfigurationPropertiesRebinder]
2018-10-17 14:23:08,635  INFO - [main                 ] o.s.context.support.DefaultLifecycleProcessor      : Starting beans in phase 0
2018-10-17 14:23:08,651  INFO - [main                 ] o.s.cloud.netflix.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2018-10-17 14:23:08,697  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Initializing Eureka in region us-east-1
2018-10-17 14:23:08,900  INFO - [main                 ] c.n.discovery.provider.DiscoveryJerseyProvider     : Using JSON encoding codec LegacyJacksonJson
2018-10-17 14:23:08,900  INFO - [main                 ] c.n.discovery.provider.DiscoveryJerseyProvider     : Using JSON decoding codec LegacyJacksonJson
2018-10-17 14:23:09,010  INFO - [main                 ] c.n.discovery.provider.DiscoveryJerseyProvider     : Using XML encoding codec XStreamXml
2018-10-17 14:23:09,025  INFO - [main                 ] c.n.discovery.provider.DiscoveryJerseyProvider     : Using XML decoding codec XStreamXml
2018-10-17 14:23:09,213  INFO - [main                 ] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 14:23:09,369  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Disable delta property : false
2018-10-17 14:23:09,369  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Single vip registry refresh property : null
2018-10-17 14:23:09,369  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Force full registry fetch : false
2018-10-17 14:23:09,369  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Application is null : false
2018-10-17 14:23:09,369  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Registered Applications size is zero : true
2018-10-17 14:23:09,369  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Application version is -1: true
2018-10-17 14:23:09,369  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Getting all instance registry info from the eureka server
2018-10-17 14:23:09,541  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : The response status is 200
2018-10-17 14:23:09,541  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Starting heartbeat executor: renew interval is: 30
2018-10-17 14:23:09,541  INFO - [main                 ] com.netflix.discovery.InstanceInfoReplicator       : InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-10-17 14:23:09,541  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Discovery Client initialized at timestamp 1539757389541 with initial instances count: 2
2018-10-17 14:23:09,557  INFO - [main                 ] o.s.c.n.e.serviceregistry.EurekaServiceRegistry    : Registering application feignClient with eureka with status UP
2018-10-17 14:23:09,557  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Saw local status change event StatusChangeEvent [timestamp=1539757389557, current=UP, previous=STARTING]
2018-10-17 14:23:09,557  INFO - [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient              : DiscoveryClient_FEIGNCLIENT/LAPTOP-AJOD9Q7O:feignClient:8090: registering service...
2018-10-17 14:23:09,572  INFO - [main                 ] org.apache.coyote.http11.Http11NioProtocol         : Starting ProtocolHandler ["http-nio-8090"]
2018-10-17 14:23:09,588  INFO - [main                 ] org.apache.tomcat.util.net.NioSelectorPool         : Using a shared selector for servlet write/read
2018-10-17 14:23:09,588  INFO - [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient              : DiscoveryClient_FEIGNCLIENT/LAPTOP-AJOD9Q7O:feignClient:8090 - registration status: 204
2018-10-17 14:23:09,603  INFO - [main                 ] o.s.boot.web.embedded.tomcat.TomcatWebServer       : Tomcat started on port(s): 8090 (http) with context path ''
2018-10-17 14:23:09,603  INFO - [main                 ] o.s.c.n.e.s.EurekaAutoServiceRegistration          : Updating port to 8090
2018-10-17 14:23:09,603  INFO - [main                 ] com.example.feign.FeignApplication                 : Started FeignApplication in 7.656 seconds (JVM running for 8.318)
2018-10-17 14:23:25,966  INFO - [http-nio-8090-exec-1 ] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-10-17 14:23:25,966  INFO - [http-nio-8090-exec-1 ] org.springframework.web.servlet.DispatcherServlet  : FrameworkServlet 'dispatcherServlet': initialization started
2018-10-17 14:23:25,999  INFO - [http-nio-8090-exec-1 ] org.springframework.web.servlet.DispatcherServlet  : FrameworkServlet 'dispatcherServlet': initialization completed in 32 ms
2018-10-17 14:23:26,061  INFO - [http-nio-8090-exec-1 ] o.s.c.a.AnnotationConfigApplicationContext         : Refreshing SpringClientFactory-RIBBONCLIENT: startup date [Wed Oct 17 14:23:26 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@8ad6665
2018-10-17 14:23:26,130  INFO - [http-nio-8090-exec-1 ] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor     : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-10-17 14:23:26,409  INFO - [http-nio-8090-exec-1 ] com.netflix.config.ChainedDynamicProperty          : Flipping property: RIBBONCLIENT.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-10-17 14:23:26,436  INFO - [http-nio-8090-exec-1 ] com.netflix.util.concurrent.ShutdownEnabledTimer   : Shutdown hook installed for: NFLoadBalancer-PingTimer-RIBBONCLIENT
2018-10-17 14:23:26,461  INFO - [http-nio-8090-exec-1 ] com.netflix.loadbalancer.BaseLoadBalancer          : Client: RIBBONCLIENT instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=RIBBONCLIENT,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-10-17 14:23:26,467  INFO - [http-nio-8090-exec-1 ] c.n.loadbalancer.DynamicServerListLoadBalancer     : Using serverListUpdater PollingServerListUpdater
2018-10-17 14:23:26,489  INFO - [http-nio-8090-exec-1 ] com.netflix.config.ChainedDynamicProperty          : Flipping property: RIBBONCLIENT.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-10-17 14:23:26,492  INFO - [http-nio-8090-exec-1 ] c.n.loadbalancer.DynamicServerListLoadBalancer     : DynamicServerListLoadBalancer for client RIBBONCLIENT initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=RIBBONCLIENT,current list of Servers=[LAPTOP-AJOD9Q7O:8080],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:LAPTOP-AJOD9Q7O:8080;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@e55dc2d
2018-10-17 14:23:27,473  INFO - [PollingServerListUpdater-0] com.netflix.config.ChainedDynamicProperty          : Flipping property: RIBBONCLIENT.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-10-17 14:24:29,109  INFO - [main                 ] o.s.c.a.AnnotationConfigApplicationContext         : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@50ad3bc1: startup date [Wed Oct 17 14:24:29 CST 2018]; root of context hierarchy
2018-10-17 14:24:29,297  INFO - [main                 ] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor     : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-10-17 14:24:29,328  INFO - [main                 ] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$b4b3bd44] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-17 14:24:29,703  INFO - [main                 ] com.example.feign.FeignApplication                 : No active profile set, falling back to default profiles: default
2018-10-17 14:24:29,719  INFO - [main                 ] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1f3f02ee: startup date [Wed Oct 17 14:24:29 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@50ad3bc1
2018-10-17 14:24:30,102 ERROR - [main                 ] org.springframework.boot.SpringApplication         : Application run failed
java.lang.IllegalStateException: Error processing condition on org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration.propertySourcesPlaceholderConfigurer
	at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:64)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForBeanMethod(ConfigurationClassBeanDefinitionReader.java:180)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:141)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:117)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:328)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:233)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:271)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:91)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:694)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:532)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:398)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:330)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1258)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1246)
	at com.example.feign.FeignApplication.main(FeignApplication.java:19)
Caused by: java.lang.IllegalStateException: Failed to introspect Class [org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration] from ClassLoader [sun.misc.Launcher$AppClassLoader@18b4aac2]
	at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:659)
	at org.springframework.util.ReflectionUtils.doWithMethods(ReflectionUtils.java:556)
	at org.springframework.util.ReflectionUtils.doWithMethods(ReflectionUtils.java:541)
	at org.springframework.util.ReflectionUtils.getUniqueDeclaredMethods(ReflectionUtils.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryMethod(AbstractAutowireCapableBeanFactory.java:718)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineTargetType(AbstractAutowireCapableBeanFactory.java:659)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.predictBeanType(AbstractAutowireCapableBeanFactory.java:627)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:1489)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:1012)
	at org.springframework.boot.autoconfigure.condition.BeanTypeRegistry.addBeanTypeForNonAliasDefinition(BeanTypeRegistry.java:180)
	at org.springframework.boot.autoconfigure.condition.BeanTypeRegistry.addBeanTypeForNonAliasDefinition(BeanTypeRegistry.java:160)
	at org.springframework.boot.autoconfigure.condition.BeanTypeRegistry.addBeanType(BeanTypeRegistry.java:153)
	at org.springframework.boot.autoconfigure.condition.BeanTypeRegistry.updateTypesIfNecessary(BeanTypeRegistry.java:215)
	at org.springframework.boot.autoconfigure.condition.BeanTypeRegistry.getNamesForType(BeanTypeRegistry.java:115)
	at org.springframework.boot.autoconfigure.condition.OnBeanCondition.collectBeanNamesForType(OnBeanCondition.java:265)
	at org.springframework.boot.autoconfigure.condition.OnBeanCondition.getBeanNamesForType(OnBeanCondition.java:254)
	at org.springframework.boot.autoconfigure.condition.OnBeanCondition.getMatchingBeans(OnBeanCondition.java:196)
	at org.springframework.boot.autoconfigure.condition.OnBeanCondition.getMatchOutcome(OnBeanCondition.java:116)
	at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:47)
	... 17 common frames omitted
Caused by: java.lang.NoClassDefFoundError: com/netflix/hystrix/contrib/javanica/aop/aspectj/HystrixCommandAspect
	at java.lang.Class.getDeclaredMethods0(Native Method)
	at java.lang.Class.privateGetDeclaredMethods(Class.java:2701)
	at java.lang.Class.getDeclaredMethods(Class.java:1975)
	at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:641)
	... 35 common frames omitted
Caused by: java.lang.ClassNotFoundException: com.netflix.hystrix.contrib.javanica.aop.aspectj.HystrixCommandAspect
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	... 39 common frames omitted
2018-10-17 14:24:30,118  INFO - [main                 ] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext : Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1f3f02ee: startup date [Wed Oct 17 14:24:29 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@50ad3bc1
2018-10-17 14:24:30,118  WARN - [main                 ] org.springframework.boot.SpringApplication         : Unable to close ApplicationContext
java.lang.IllegalStateException: Failed to introspect Class [org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration] from ClassLoader [sun.misc.Launcher$AppClassLoader@18b4aac2]
	at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:659)
	at org.springframework.util.ReflectionUtils.doWithMethods(ReflectionUtils.java:556)
	at org.springframework.util.ReflectionUtils.doWithMethods(ReflectionUtils.java:541)
	at org.springframework.util.ReflectionUtils.getUniqueDeclaredMethods(ReflectionUtils.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryMethod(AbstractAutowireCapableBeanFactory.java:718)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineTargetType(AbstractAutowireCapableBeanFactory.java:659)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.predictBeanType(AbstractAutowireCapableBeanFactory.java:627)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:1489)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:419)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:389)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:510)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:502)
	at org.springframework.context.support.AbstractApplicationContext.getBeansOfType(AbstractApplicationContext.java:1198)
	at org.springframework.boot.SpringApplication.getExitCodeFromMappedException(SpringApplication.java:892)
	at org.springframework.boot.SpringApplication.getExitCodeFromException(SpringApplication.java:878)
	at org.springframework.boot.SpringApplication.handleExitCode(SpringApplication.java:864)
	at org.springframework.boot.SpringApplication.handleRunFailure(SpringApplication.java:813)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:341)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1258)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1246)
	at com.example.feign.FeignApplication.main(FeignApplication.java:19)
Caused by: java.lang.NoClassDefFoundError: com/netflix/hystrix/contrib/javanica/aop/aspectj/HystrixCommandAspect
	at java.lang.Class.getDeclaredMethods0(Native Method)
	at java.lang.Class.privateGetDeclaredMethods(Class.java:2701)
	at java.lang.Class.getDeclaredMethods(Class.java:1975)
	at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:641)
	... 20 common frames omitted
Caused by: java.lang.ClassNotFoundException: com.netflix.hystrix.contrib.javanica.aop.aspectj.HystrixCommandAspect
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	... 24 common frames omitted
2018-10-17 14:24:46,681  INFO - [main                 ] o.s.c.a.AnnotationConfigApplicationContext         : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@5f9b2141: startup date [Wed Oct 17 14:24:46 CST 2018]; root of context hierarchy
2018-10-17 14:24:46,868  INFO - [main                 ] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor     : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-10-17 14:24:46,917  INFO - [main                 ] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$18467ce9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-17 14:24:47,354  INFO - [main                 ] com.example.feign.FeignApplication                 : No active profile set, falling back to default profiles: default
2018-10-17 14:24:47,386  INFO - [main                 ] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@535779e4: startup date [Wed Oct 17 14:24:47 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5f9b2141
2018-10-17 14:24:47,870 ERROR - [main                 ] org.springframework.boot.SpringApplication         : Application run failed
java.lang.IllegalStateException: Error processing condition on org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration.propertySourcesPlaceholderConfigurer
	at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:64)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForBeanMethod(ConfigurationClassBeanDefinitionReader.java:180)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:141)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:117)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:328)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:233)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:271)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:91)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:694)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:532)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:398)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:330)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1258)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1246)
	at com.example.feign.FeignApplication.main(FeignApplication.java:19)
Caused by: java.lang.IllegalStateException: Failed to introspect Class [org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration] from ClassLoader [sun.misc.Launcher$AppClassLoader@18b4aac2]
	at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:659)
	at org.springframework.util.ReflectionUtils.doWithMethods(ReflectionUtils.java:556)
	at org.springframework.util.ReflectionUtils.doWithMethods(ReflectionUtils.java:541)
	at org.springframework.util.ReflectionUtils.getUniqueDeclaredMethods(ReflectionUtils.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryMethod(AbstractAutowireCapableBeanFactory.java:718)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineTargetType(AbstractAutowireCapableBeanFactory.java:659)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.predictBeanType(AbstractAutowireCapableBeanFactory.java:627)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:1489)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:1012)
	at org.springframework.boot.autoconfigure.condition.BeanTypeRegistry.addBeanTypeForNonAliasDefinition(BeanTypeRegistry.java:180)
	at org.springframework.boot.autoconfigure.condition.BeanTypeRegistry.addBeanTypeForNonAliasDefinition(BeanTypeRegistry.java:160)
	at org.springframework.boot.autoconfigure.condition.BeanTypeRegistry.addBeanType(BeanTypeRegistry.java:153)
	at org.springframework.boot.autoconfigure.condition.BeanTypeRegistry.updateTypesIfNecessary(BeanTypeRegistry.java:215)
	at org.springframework.boot.autoconfigure.condition.BeanTypeRegistry.getNamesForType(BeanTypeRegistry.java:115)
	at org.springframework.boot.autoconfigure.condition.OnBeanCondition.collectBeanNamesForType(OnBeanCondition.java:265)
	at org.springframework.boot.autoconfigure.condition.OnBeanCondition.getBeanNamesForType(OnBeanCondition.java:254)
	at org.springframework.boot.autoconfigure.condition.OnBeanCondition.getMatchingBeans(OnBeanCondition.java:196)
	at org.springframework.boot.autoconfigure.condition.OnBeanCondition.getMatchOutcome(OnBeanCondition.java:116)
	at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:47)
	... 17 common frames omitted
Caused by: java.lang.NoClassDefFoundError: com/netflix/hystrix/contrib/javanica/aop/aspectj/HystrixCommandAspect
	at java.lang.Class.getDeclaredMethods0(Native Method)
	at java.lang.Class.privateGetDeclaredMethods(Class.java:2701)
	at java.lang.Class.getDeclaredMethods(Class.java:1975)
	at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:641)
	... 35 common frames omitted
Caused by: java.lang.ClassNotFoundException: com.netflix.hystrix.contrib.javanica.aop.aspectj.HystrixCommandAspect
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	... 39 common frames omitted
2018-10-17 14:24:47,885  INFO - [main                 ] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext : Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@535779e4: startup date [Wed Oct 17 14:24:47 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5f9b2141
2018-10-17 14:24:47,885  WARN - [main                 ] org.springframework.boot.SpringApplication         : Unable to close ApplicationContext
java.lang.IllegalStateException: Failed to introspect Class [org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration] from ClassLoader [sun.misc.Launcher$AppClassLoader@18b4aac2]
	at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:659)
	at org.springframework.util.ReflectionUtils.doWithMethods(ReflectionUtils.java:556)
	at org.springframework.util.ReflectionUtils.doWithMethods(ReflectionUtils.java:541)
	at org.springframework.util.ReflectionUtils.getUniqueDeclaredMethods(ReflectionUtils.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryMethod(AbstractAutowireCapableBeanFactory.java:718)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineTargetType(AbstractAutowireCapableBeanFactory.java:659)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.predictBeanType(AbstractAutowireCapableBeanFactory.java:627)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:1489)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:419)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:389)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:510)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:502)
	at org.springframework.context.support.AbstractApplicationContext.getBeansOfType(AbstractApplicationContext.java:1198)
	at org.springframework.boot.SpringApplication.getExitCodeFromMappedException(SpringApplication.java:892)
	at org.springframework.boot.SpringApplication.getExitCodeFromException(SpringApplication.java:878)
	at org.springframework.boot.SpringApplication.handleExitCode(SpringApplication.java:864)
	at org.springframework.boot.SpringApplication.handleRunFailure(SpringApplication.java:813)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:341)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1258)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1246)
	at com.example.feign.FeignApplication.main(FeignApplication.java:19)
Caused by: java.lang.NoClassDefFoundError: com/netflix/hystrix/contrib/javanica/aop/aspectj/HystrixCommandAspect
	at java.lang.Class.getDeclaredMethods0(Native Method)
	at java.lang.Class.privateGetDeclaredMethods(Class.java:2701)
	at java.lang.Class.getDeclaredMethods(Class.java:1975)
	at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:641)
	... 20 common frames omitted
Caused by: java.lang.ClassNotFoundException: com.netflix.hystrix.contrib.javanica.aop.aspectj.HystrixCommandAspect
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	... 24 common frames omitted
2018-10-17 14:28:16,323  INFO - [main                 ] o.s.c.a.AnnotationConfigApplicationContext         : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@193f604a: startup date [Wed Oct 17 14:28:16 CST 2018]; root of context hierarchy
2018-10-17 14:28:16,526  INFO - [main                 ] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor     : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-10-17 14:28:16,557  INFO - [main                 ] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$4404e8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-17 14:28:16,932  INFO - [main                 ] com.example.feign.FeignApplication                 : No active profile set, falling back to default profiles: default
2018-10-17 14:28:16,947  INFO - [main                 ] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@71812481: startup date [Wed Oct 17 14:28:16 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@193f604a
2018-10-17 14:28:17,885  INFO - [main                 ] o.springframework.cloud.context.scope.GenericScope : BeanFactory id=8c0af0b4-8514-38c0-a592-e0158726d74b
2018-10-17 14:28:17,900  INFO - [main                 ] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor     : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-10-17 14:28:18,182  INFO - [main                 ] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$4404e8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-17 14:28:18,947  INFO - [main                 ] o.s.boot.web.embedded.tomcat.TomcatWebServer       : Tomcat initialized with port(s): 8090 (http)
2018-10-17 14:28:18,963  INFO - [main                 ] org.apache.coyote.http11.Http11NioProtocol         : Initializing ProtocolHandler ["http-nio-8090"]
2018-10-17 14:28:18,978  INFO - [main                 ] org.apache.catalina.core.StandardService           : Starting service [Tomcat]
2018-10-17 14:28:18,978  INFO - [main                 ] org.apache.catalina.core.StandardEngine            : Starting Servlet Engine: Apache Tomcat/8.5.32
2018-10-17 14:28:18,994  INFO - [localhost-startStop-1] org.apache.catalina.core.AprLifecycleListener      : The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_101\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;%JAVA_HOME%\bin;C:\Program Files\MySQL\MySQL Server 5.5\bin;E:\apache_maven_3.3.9\bin;D:\database\redis\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;D:\Git\cmd;D:\database\mongodb\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\RabbitMQ Server\rabbitmq_server-3.7.7\sbin;C:\Program Files\erl10.0.1\bin;D:\database\mysql-5.7.23-winx64\bin;D:\nodejs\;D:\scala-2.11.8\bin;C:\Users\49535\AppData\Local\Microsoft\WindowsApps;C:\Users\49535\AppData\Roaming\npm;.]
2018-10-17 14:28:19,197  INFO - [localhost-startStop-1] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]  : Initializing Spring embedded WebApplicationContext
2018-10-17 14:28:19,197  INFO - [localhost-startStop-1] org.springframework.web.context.ContextLoader      : Root WebApplicationContext: initialization completed in 2250 ms
2018-10-17 14:28:19,431  WARN - [localhost-startStop-1] com.netflix.config.sources.URLConfigurationSource  : No URLs will be polled as dynamic configuration sources.
2018-10-17 14:28:19,431  INFO - [localhost-startStop-1] com.netflix.config.sources.URLConfigurationSource  : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-17 14:28:19,447  INFO - [localhost-startStop-1] com.netflix.config.DynamicPropertyFactory          : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@4d33d1de
2018-10-17 14:28:21,010  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-10-17 14:28:21,010  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'webMvcMetricsFilter' to: [/*]
2018-10-17 14:28:21,010  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-10-17 14:28:21,010  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-10-17 14:28:21,010  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'requestContextFilter' to: [/*]
2018-10-17 14:28:21,010  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'httpTraceFilter' to: [/*]
2018-10-17 14:28:21,010  INFO - [localhost-startStop-1] o.s.boot.web.servlet.ServletRegistrationBean       : Servlet dispatcherServlet mapped to [/]
2018-10-17 14:28:21,057  INFO - [main                 ] o.s.c.a.AnnotationConfigApplicationContext         : Refreshing FeignContext-RIBBONCLIENT: startup date [Wed Oct 17 14:28:21 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@71812481
2018-10-17 14:28:21,073  INFO - [main                 ] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor     : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-10-17 14:28:21,307  WARN - [main                 ] com.netflix.config.sources.URLConfigurationSource  : No URLs will be polled as dynamic configuration sources.
2018-10-17 14:28:21,307  INFO - [main                 ] com.netflix.config.sources.URLConfigurationSource  : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-17 14:28:21,401  INFO - [main                 ] o.s.web.servlet.handler.SimpleUrlHandlerMapping    : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-17 14:28:21,557  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerAdapter         : Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@71812481: startup date [Wed Oct 17 14:28:16 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@193f604a
2018-10-17 14:28:21,620  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/feign/server],methods=[GET],produces=[application/json]}" onto public java.lang.String com.example.feign.client.controller.FeignConsumerController.server()
2018-10-17 14:28:21,620  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/feign/consumer],methods=[GET],produces=[application/json]}" onto public java.lang.String com.example.feign.client.controller.FeignConsumerController.consumer()
2018-10-17 14:28:21,620  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-10-17 14:28:21,620  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-10-17 14:28:21,651  INFO - [main                 ] o.s.web.servlet.handler.SimpleUrlHandlerMapping    : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-17 14:28:21,651  INFO - [main                 ] o.s.web.servlet.handler.SimpleUrlHandlerMapping    : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-17 14:28:22,194  INFO - [main                 ] o.s.b.actuate.endpoint.web.EndpointLinksResolver   : Exposing 2 endpoint(s) beneath base path '/actuator'
2018-10-17 14:28:22,209  INFO - [main                 ] o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-10-17 14:28:22,209  INFO - [main                 ] o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-10-17 14:28:22,209  INFO - [main                 ] o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-10-17 14:28:22,272  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Registering beans for JMX exposure on startup
2018-10-17 14:28:22,272  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-10-17 14:28:22,272  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-10-17 14:28:22,272  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-10-17 14:28:22,287  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-10-17 14:28:22,287  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-10-17 14:28:22,303  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=71812481,type=ConfigurationPropertiesRebinder]
2018-10-17 14:28:22,303  INFO - [main                 ] o.s.context.support.DefaultLifecycleProcessor      : Starting beans in phase 0
2018-10-17 14:28:22,319  INFO - [main                 ] o.s.cloud.netflix.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2018-10-17 14:28:22,381  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Initializing Eureka in region us-east-1
2018-10-17 14:28:22,584  INFO - [main                 ] c.n.discovery.provider.DiscoveryJerseyProvider     : Using JSON encoding codec LegacyJacksonJson
2018-10-17 14:28:22,584  INFO - [main                 ] c.n.discovery.provider.DiscoveryJerseyProvider     : Using JSON decoding codec LegacyJacksonJson
2018-10-17 14:28:22,725  INFO - [main                 ] c.n.discovery.provider.DiscoveryJerseyProvider     : Using XML encoding codec XStreamXml
2018-10-17 14:28:22,725  INFO - [main                 ] c.n.discovery.provider.DiscoveryJerseyProvider     : Using XML decoding codec XStreamXml
2018-10-17 14:28:22,897  INFO - [main                 ] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 14:28:23,084  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Disable delta property : false
2018-10-17 14:28:23,084  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Single vip registry refresh property : null
2018-10-17 14:28:23,084  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Force full registry fetch : false
2018-10-17 14:28:23,084  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Application is null : false
2018-10-17 14:28:23,084  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Registered Applications size is zero : true
2018-10-17 14:28:23,084  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Application version is -1: true
2018-10-17 14:28:23,084  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Getting all instance registry info from the eureka server
2018-10-17 14:28:23,272  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : The response status is 200
2018-10-17 14:28:23,287  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Starting heartbeat executor: renew interval is: 30
2018-10-17 14:28:23,287  INFO - [main                 ] com.netflix.discovery.InstanceInfoReplicator       : InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-10-17 14:28:23,287  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Discovery Client initialized at timestamp 1539757703287 with initial instances count: 1
2018-10-17 14:28:23,287  INFO - [main                 ] o.s.c.n.e.serviceregistry.EurekaServiceRegistry    : Registering application feignClient with eureka with status UP
2018-10-17 14:28:23,287  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Saw local status change event StatusChangeEvent [timestamp=1539757703287, current=UP, previous=STARTING]
2018-10-17 14:28:23,287  INFO - [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient              : DiscoveryClient_FEIGNCLIENT/LAPTOP-AJOD9Q7O:feignClient:8090: registering service...
2018-10-17 14:28:23,303  INFO - [main                 ] org.apache.coyote.http11.Http11NioProtocol         : Starting ProtocolHandler ["http-nio-8090"]
2018-10-17 14:28:23,318  INFO - [main                 ] org.apache.tomcat.util.net.NioSelectorPool         : Using a shared selector for servlet write/read
2018-10-17 14:28:23,334  INFO - [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient              : DiscoveryClient_FEIGNCLIENT/LAPTOP-AJOD9Q7O:feignClient:8090 - registration status: 204
2018-10-17 14:28:23,334  INFO - [main                 ] o.s.boot.web.embedded.tomcat.TomcatWebServer       : Tomcat started on port(s): 8090 (http) with context path ''
2018-10-17 14:28:23,334  INFO - [main                 ] o.s.c.n.e.s.EurekaAutoServiceRegistration          : Updating port to 8090
2018-10-17 14:28:23,334  INFO - [main                 ] com.example.feign.FeignApplication                 : Started FeignApplication in 8.074 seconds (JVM running for 8.763)
2018-10-17 14:28:31,007  INFO - [http-nio-8090-exec-1 ] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-10-17 14:28:31,008  INFO - [http-nio-8090-exec-1 ] org.springframework.web.servlet.DispatcherServlet  : FrameworkServlet 'dispatcherServlet': initialization started
2018-10-17 14:28:31,039  INFO - [http-nio-8090-exec-1 ] org.springframework.web.servlet.DispatcherServlet  : FrameworkServlet 'dispatcherServlet': initialization completed in 31 ms
2018-10-17 14:28:31,091  INFO - [http-nio-8090-exec-1 ] o.s.c.a.AnnotationConfigApplicationContext         : Refreshing SpringClientFactory-RIBBONCLIENT: startup date [Wed Oct 17 14:28:31 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@71812481
2018-10-17 14:28:31,167  INFO - [http-nio-8090-exec-1 ] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor     : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-10-17 14:28:31,465  INFO - [http-nio-8090-exec-1 ] com.netflix.config.ChainedDynamicProperty          : Flipping property: RIBBONCLIENT.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-10-17 14:28:31,495  INFO - [http-nio-8090-exec-1 ] com.netflix.util.concurrent.ShutdownEnabledTimer   : Shutdown hook installed for: NFLoadBalancer-PingTimer-RIBBONCLIENT
2018-10-17 14:28:31,527  INFO - [http-nio-8090-exec-1 ] com.netflix.loadbalancer.BaseLoadBalancer          : Client: RIBBONCLIENT instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=RIBBONCLIENT,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-10-17 14:28:31,534  INFO - [http-nio-8090-exec-1 ] c.n.loadbalancer.DynamicServerListLoadBalancer     : Using serverListUpdater PollingServerListUpdater
2018-10-17 14:28:31,563  INFO - [http-nio-8090-exec-1 ] com.netflix.config.ChainedDynamicProperty          : Flipping property: RIBBONCLIENT.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-10-17 14:28:31,566  INFO - [http-nio-8090-exec-1 ] c.n.loadbalancer.DynamicServerListLoadBalancer     : DynamicServerListLoadBalancer for client RIBBONCLIENT initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=RIBBONCLIENT,current list of Servers=[LAPTOP-AJOD9Q7O:8080],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:LAPTOP-AJOD9Q7O:8080;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@76a52d9f
2018-10-17 14:28:32,683  INFO - [PollingServerListUpdater-0] com.netflix.config.ChainedDynamicProperty          : Flipping property: RIBBONCLIENT.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-10-17 14:29:27,610 ERROR - [http-nio-8090-exec-6 ] o.a.c.c.C.[.[localhost].[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is feign.RetryableException: Read timed out executing GET http://RIBBONCLIENT/ribbon/server] with root cause
java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:170)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:704)
	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:647)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1536)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1441)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)
	at feign.Client$Default.convertResponse(Client.java:152)
	at feign.Client$Default.execute(Client.java:74)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:89)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:55)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy111.consumer(Unknown Source)
	at com.example.feign.client.controller.FeignConsumerController.consumer(FeignConsumerController.java:23)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:155)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:123)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:800)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1471)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2018-10-17 14:29:46,911 ERROR - [http-nio-8090-exec-4 ] o.a.c.c.C.[.[localhost].[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is feign.RetryableException: Read timed out executing GET http://RIBBONCLIENT/ribbon/server] with root cause
java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:170)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:704)
	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:647)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1536)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1441)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)
	at feign.Client$Default.convertResponse(Client.java:152)
	at feign.Client$Default.execute(Client.java:74)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:89)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:55)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy111.consumer(Unknown Source)
	at com.example.feign.client.controller.FeignConsumerController.consumer(FeignConsumerController.java:23)
	at sun.reflect.GeneratedMethodAccessor64.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:155)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:123)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:800)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1471)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2018-10-17 14:31:07,755  INFO - [main                 ] o.s.c.a.AnnotationConfigApplicationContext         : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@793be5ca: startup date [Wed Oct 17 14:31:07 CST 2018]; root of context hierarchy
2018-10-17 14:31:07,959  INFO - [main                 ] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor     : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-10-17 14:31:08,005  INFO - [main                 ] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$938cb1a6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-17 14:31:08,380  INFO - [main                 ] com.example.feign.FeignApplication                 : No active profile set, falling back to default profiles: default
2018-10-17 14:31:08,412  INFO - [main                 ] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@21a21c64: startup date [Wed Oct 17 14:31:08 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@793be5ca
2018-10-17 14:31:09,318  INFO - [main                 ] o.springframework.cloud.context.scope.GenericScope : BeanFactory id=8c0af0b4-8514-38c0-a592-e0158726d74b
2018-10-17 14:31:09,333  INFO - [main                 ] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor     : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-10-17 14:31:09,630  INFO - [main                 ] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$938cb1a6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-17 14:31:10,304  INFO - [main                 ] o.s.boot.web.embedded.tomcat.TomcatWebServer       : Tomcat initialized with port(s): 8090 (http)
2018-10-17 14:31:10,320  INFO - [main                 ] org.apache.coyote.http11.Http11NioProtocol         : Initializing ProtocolHandler ["http-nio-8090"]
2018-10-17 14:31:10,323  INFO - [main                 ] org.apache.catalina.core.StandardService           : Starting service [Tomcat]
2018-10-17 14:31:10,323  INFO - [main                 ] org.apache.catalina.core.StandardEngine            : Starting Servlet Engine: Apache Tomcat/8.5.32
2018-10-17 14:31:10,339  INFO - [localhost-startStop-1] org.apache.catalina.core.AprLifecycleListener      : The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_101\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;%JAVA_HOME%\bin;C:\Program Files\MySQL\MySQL Server 5.5\bin;E:\apache_maven_3.3.9\bin;D:\database\redis\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;D:\Git\cmd;D:\database\mongodb\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\RabbitMQ Server\rabbitmq_server-3.7.7\sbin;C:\Program Files\erl10.0.1\bin;D:\database\mysql-5.7.23-winx64\bin;D:\nodejs\;D:\scala-2.11.8\bin;C:\Users\49535\AppData\Local\Microsoft\WindowsApps;C:\Users\49535\AppData\Roaming\npm;.]
2018-10-17 14:31:10,542  INFO - [localhost-startStop-1] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]  : Initializing Spring embedded WebApplicationContext
2018-10-17 14:31:10,542  INFO - [localhost-startStop-1] org.springframework.web.context.ContextLoader      : Root WebApplicationContext: initialization completed in 2130 ms
2018-10-17 14:31:10,776  WARN - [localhost-startStop-1] com.netflix.config.sources.URLConfigurationSource  : No URLs will be polled as dynamic configuration sources.
2018-10-17 14:31:10,776  INFO - [localhost-startStop-1] com.netflix.config.sources.URLConfigurationSource  : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-17 14:31:10,776  INFO - [localhost-startStop-1] com.netflix.config.DynamicPropertyFactory          : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3130e462
2018-10-17 14:31:12,307  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-10-17 14:31:12,307  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'webMvcMetricsFilter' to: [/*]
2018-10-17 14:31:12,307  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-10-17 14:31:12,307  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-10-17 14:31:12,307  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'requestContextFilter' to: [/*]
2018-10-17 14:31:12,307  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'httpTraceFilter' to: [/*]
2018-10-17 14:31:12,307  INFO - [localhost-startStop-1] o.s.boot.web.servlet.ServletRegistrationBean       : Servlet dispatcherServlet mapped to [/]
2018-10-17 14:31:12,354  INFO - [main                 ] o.s.c.a.AnnotationConfigApplicationContext         : Refreshing FeignContext-RIBBONCLIENT: startup date [Wed Oct 17 14:31:12 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@21a21c64
2018-10-17 14:31:12,370  INFO - [main                 ] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor     : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-10-17 14:31:12,588  WARN - [main                 ] com.netflix.config.sources.URLConfigurationSource  : No URLs will be polled as dynamic configuration sources.
2018-10-17 14:31:12,588  INFO - [main                 ] com.netflix.config.sources.URLConfigurationSource  : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-17 14:31:12,698  INFO - [main                 ] o.s.web.servlet.handler.SimpleUrlHandlerMapping    : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-17 14:31:12,854  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerAdapter         : Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@21a21c64: startup date [Wed Oct 17 14:31:08 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@793be5ca
2018-10-17 14:31:12,916  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/feign/server],methods=[GET],produces=[application/json]}" onto public java.lang.String com.example.feign.client.controller.FeignConsumerController.server()
2018-10-17 14:31:12,916  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/feign/consumer],methods=[GET],produces=[application/json]}" onto public java.lang.String com.example.feign.client.controller.FeignConsumerController.consumer()
2018-10-17 14:31:12,916  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-10-17 14:31:12,916  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-10-17 14:31:12,948  INFO - [main                 ] o.s.web.servlet.handler.SimpleUrlHandlerMapping    : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-17 14:31:12,948  INFO - [main                 ] o.s.web.servlet.handler.SimpleUrlHandlerMapping    : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-17 14:31:13,447  INFO - [main                 ] o.s.b.actuate.endpoint.web.EndpointLinksResolver   : Exposing 2 endpoint(s) beneath base path '/actuator'
2018-10-17 14:31:13,447  INFO - [main                 ] o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-10-17 14:31:13,463  INFO - [main                 ] o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-10-17 14:31:13,463  INFO - [main                 ] o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-10-17 14:31:13,494  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Registering beans for JMX exposure on startup
2018-10-17 14:31:13,510  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-10-17 14:31:13,510  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-10-17 14:31:13,510  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-10-17 14:31:13,510  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-10-17 14:31:13,526  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-10-17 14:31:13,526  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=21a21c64,type=ConfigurationPropertiesRebinder]
2018-10-17 14:31:13,541  INFO - [main                 ] o.s.context.support.DefaultLifecycleProcessor      : Starting beans in phase 0
2018-10-17 14:31:13,557  INFO - [main                 ] o.s.cloud.netflix.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2018-10-17 14:31:13,619  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Initializing Eureka in region us-east-1
2018-10-17 14:31:13,791  INFO - [main                 ] c.n.discovery.provider.DiscoveryJerseyProvider     : Using JSON encoding codec LegacyJacksonJson
2018-10-17 14:31:13,791  INFO - [main                 ] c.n.discovery.provider.DiscoveryJerseyProvider     : Using JSON decoding codec LegacyJacksonJson
2018-10-17 14:31:13,932  INFO - [main                 ] c.n.discovery.provider.DiscoveryJerseyProvider     : Using XML encoding codec XStreamXml
2018-10-17 14:31:13,932  INFO - [main                 ] c.n.discovery.provider.DiscoveryJerseyProvider     : Using XML decoding codec XStreamXml
2018-10-17 14:31:14,104  INFO - [main                 ] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 14:31:14,307  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Disable delta property : false
2018-10-17 14:31:14,307  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Single vip registry refresh property : null
2018-10-17 14:31:14,307  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Force full registry fetch : false
2018-10-17 14:31:14,307  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Application is null : false
2018-10-17 14:31:14,307  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Registered Applications size is zero : true
2018-10-17 14:31:14,307  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Application version is -1: true
2018-10-17 14:31:14,307  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Getting all instance registry info from the eureka server
2018-10-17 14:31:14,541  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : The response status is 200
2018-10-17 14:31:14,541  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Starting heartbeat executor: renew interval is: 30
2018-10-17 14:31:14,541  INFO - [main                 ] com.netflix.discovery.InstanceInfoReplicator       : InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-10-17 14:31:14,557  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Discovery Client initialized at timestamp 1539757874541 with initial instances count: 2
2018-10-17 14:31:14,557  INFO - [main                 ] o.s.c.n.e.serviceregistry.EurekaServiceRegistry    : Registering application feignClient with eureka with status UP
2018-10-17 14:31:14,557  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Saw local status change event StatusChangeEvent [timestamp=1539757874557, current=UP, previous=STARTING]
2018-10-17 14:31:14,557  INFO - [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient              : DiscoveryClient_FEIGNCLIENT/LAPTOP-AJOD9Q7O:feignClient:8090: registering service...
2018-10-17 14:31:14,572  INFO - [main                 ] org.apache.coyote.http11.Http11NioProtocol         : Starting ProtocolHandler ["http-nio-8090"]
2018-10-17 14:31:14,588  INFO - [main                 ] org.apache.tomcat.util.net.NioSelectorPool         : Using a shared selector for servlet write/read
2018-10-17 14:31:14,588  INFO - [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient              : DiscoveryClient_FEIGNCLIENT/LAPTOP-AJOD9Q7O:feignClient:8090 - registration status: 204
2018-10-17 14:31:14,603  INFO - [main                 ] o.s.boot.web.embedded.tomcat.TomcatWebServer       : Tomcat started on port(s): 8090 (http) with context path ''
2018-10-17 14:31:14,603  INFO - [main                 ] o.s.c.n.e.s.EurekaAutoServiceRegistration          : Updating port to 8090
2018-10-17 14:31:14,603  INFO - [main                 ] com.example.feign.FeignApplication                 : Started FeignApplication in 7.925 seconds (JVM running for 8.629)
2018-10-17 14:31:35,237  INFO - [http-nio-8090-exec-1 ] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-10-17 14:31:35,237  INFO - [http-nio-8090-exec-1 ] org.springframework.web.servlet.DispatcherServlet  : FrameworkServlet 'dispatcherServlet': initialization started
2018-10-17 14:31:35,265  INFO - [http-nio-8090-exec-1 ] org.springframework.web.servlet.DispatcherServlet  : FrameworkServlet 'dispatcherServlet': initialization completed in 28 ms
2018-10-17 14:31:35,317  INFO - [http-nio-8090-exec-1 ] o.s.c.a.AnnotationConfigApplicationContext         : Refreshing SpringClientFactory-RIBBONCLIENT: startup date [Wed Oct 17 14:31:35 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@21a21c64
2018-10-17 14:31:35,382  INFO - [http-nio-8090-exec-1 ] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor     : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-10-17 14:31:35,679  INFO - [http-nio-8090-exec-1 ] com.netflix.config.ChainedDynamicProperty          : Flipping property: RIBBONCLIENT.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-10-17 14:31:35,707  INFO - [http-nio-8090-exec-1 ] com.netflix.util.concurrent.ShutdownEnabledTimer   : Shutdown hook installed for: NFLoadBalancer-PingTimer-RIBBONCLIENT
2018-10-17 14:31:35,738  INFO - [http-nio-8090-exec-1 ] com.netflix.loadbalancer.BaseLoadBalancer          : Client: RIBBONCLIENT instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=RIBBONCLIENT,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-10-17 14:31:35,746  INFO - [http-nio-8090-exec-1 ] c.n.loadbalancer.DynamicServerListLoadBalancer     : Using serverListUpdater PollingServerListUpdater
2018-10-17 14:31:35,773  INFO - [http-nio-8090-exec-1 ] com.netflix.config.ChainedDynamicProperty          : Flipping property: RIBBONCLIENT.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-10-17 14:31:35,775  INFO - [http-nio-8090-exec-1 ] c.n.loadbalancer.DynamicServerListLoadBalancer     : DynamicServerListLoadBalancer for client RIBBONCLIENT initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=RIBBONCLIENT,current list of Servers=[LAPTOP-AJOD9Q7O:8080],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:LAPTOP-AJOD9Q7O:8080;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@ab45bbe
2018-10-17 14:31:36,750  INFO - [PollingServerListUpdater-0] com.netflix.config.ChainedDynamicProperty          : Flipping property: RIBBONCLIENT.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-10-17 14:35:19,638  INFO - [main                 ] o.s.c.a.AnnotationConfigApplicationContext         : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2fd1433e: startup date [Wed Oct 17 14:35:19 CST 2018]; root of context hierarchy
2018-10-17 14:35:19,842  INFO - [main                 ] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor     : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-10-17 14:35:19,873  INFO - [main                 ] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$4104cf5f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-17 14:35:20,228  INFO - [main                 ] com.example.feign.FeignApplication                 : No active profile set, falling back to default profiles: default
2018-10-17 14:35:20,244  INFO - [main                 ] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3a5ecce3: startup date [Wed Oct 17 14:35:20 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2fd1433e
2018-10-17 14:35:21,157  INFO - [main                 ] o.springframework.cloud.context.scope.GenericScope : BeanFactory id=8c0af0b4-8514-38c0-a592-e0158726d74b
2018-10-17 14:35:21,173  INFO - [main                 ] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor     : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-10-17 14:35:21,439  INFO - [main                 ] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$4104cf5f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-17 14:35:22,126  INFO - [main                 ] o.s.boot.web.embedded.tomcat.TomcatWebServer       : Tomcat initialized with port(s): 8090 (http)
2018-10-17 14:35:22,142  INFO - [main                 ] org.apache.coyote.http11.Http11NioProtocol         : Initializing ProtocolHandler ["http-nio-8090"]
2018-10-17 14:35:22,157  INFO - [main                 ] org.apache.catalina.core.StandardService           : Starting service [Tomcat]
2018-10-17 14:35:22,157  INFO - [main                 ] org.apache.catalina.core.StandardEngine            : Starting Servlet Engine: Apache Tomcat/8.5.32
2018-10-17 14:35:22,157  INFO - [localhost-startStop-1] org.apache.catalina.core.AprLifecycleListener      : The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_101\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;%JAVA_HOME%\bin;C:\Program Files\MySQL\MySQL Server 5.5\bin;E:\apache_maven_3.3.9\bin;D:\database\redis\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;D:\Git\cmd;D:\database\mongodb\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\RabbitMQ Server\rabbitmq_server-3.7.7\sbin;C:\Program Files\erl10.0.1\bin;D:\database\mysql-5.7.23-winx64\bin;D:\nodejs\;D:\scala-2.11.8\bin;C:\Users\49535\AppData\Local\Microsoft\WindowsApps;C:\Users\49535\AppData\Roaming\npm;.]
2018-10-17 14:35:22,360  INFO - [localhost-startStop-1] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]  : Initializing Spring embedded WebApplicationContext
2018-10-17 14:35:22,360  INFO - [localhost-startStop-1] org.springframework.web.context.ContextLoader      : Root WebApplicationContext: initialization completed in 2116 ms
2018-10-17 14:35:22,595  WARN - [localhost-startStop-1] com.netflix.config.sources.URLConfigurationSource  : No URLs will be polled as dynamic configuration sources.
2018-10-17 14:35:22,595  INFO - [localhost-startStop-1] com.netflix.config.sources.URLConfigurationSource  : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-17 14:35:22,610  INFO - [localhost-startStop-1] com.netflix.config.DynamicPropertyFactory          : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@c41416a
2018-10-17 14:35:24,063  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-10-17 14:35:24,063  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'webMvcMetricsFilter' to: [/*]
2018-10-17 14:35:24,063  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-10-17 14:35:24,063  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-10-17 14:35:24,063  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'requestContextFilter' to: [/*]
2018-10-17 14:35:24,063  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'httpTraceFilter' to: [/*]
2018-10-17 14:35:24,063  INFO - [localhost-startStop-1] o.s.boot.web.servlet.ServletRegistrationBean       : Servlet dispatcherServlet mapped to [/]
2018-10-17 14:35:24,110  INFO - [main                 ] o.s.c.a.AnnotationConfigApplicationContext         : Refreshing FeignContext-RIBBONCLIENT: startup date [Wed Oct 17 14:35:24 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3a5ecce3
2018-10-17 14:35:24,141  INFO - [main                 ] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor     : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-10-17 14:35:24,391  WARN - [main                 ] com.netflix.config.sources.URLConfigurationSource  : No URLs will be polled as dynamic configuration sources.
2018-10-17 14:35:24,391  INFO - [main                 ] com.netflix.config.sources.URLConfigurationSource  : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-17 14:35:24,469  INFO - [main                 ] o.s.web.servlet.handler.SimpleUrlHandlerMapping    : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-17 14:35:24,641  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerAdapter         : Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3a5ecce3: startup date [Wed Oct 17 14:35:20 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2fd1433e
2018-10-17 14:35:24,703  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/feign/server],methods=[GET],produces=[application/json]}" onto public java.lang.String com.example.feign.client.controller.FeignConsumerController.server()
2018-10-17 14:35:24,703  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/feign/consumer],methods=[GET],produces=[application/json]}" onto public java.lang.String com.example.feign.client.controller.FeignConsumerController.consumer()
2018-10-17 14:35:24,719  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-10-17 14:35:24,719  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-10-17 14:35:24,750  INFO - [main                 ] o.s.web.servlet.handler.SimpleUrlHandlerMapping    : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-17 14:35:24,750  INFO - [main                 ] o.s.web.servlet.handler.SimpleUrlHandlerMapping    : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-17 14:35:25,275  INFO - [main                 ] o.s.b.actuate.endpoint.web.EndpointLinksResolver   : Exposing 2 endpoint(s) beneath base path '/actuator'
2018-10-17 14:35:25,275  INFO - [main                 ] o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-10-17 14:35:25,291  INFO - [main                 ] o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-10-17 14:35:25,291  INFO - [main                 ] o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-10-17 14:35:25,322  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Registering beans for JMX exposure on startup
2018-10-17 14:35:25,322  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-10-17 14:35:25,322  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-10-17 14:35:25,338  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-10-17 14:35:25,338  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-10-17 14:35:25,338  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-10-17 14:35:25,353  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=3a5ecce3,type=ConfigurationPropertiesRebinder]
2018-10-17 14:35:25,353  INFO - [main                 ] o.s.context.support.DefaultLifecycleProcessor      : Starting beans in phase 0
2018-10-17 14:35:25,369  INFO - [main                 ] o.s.cloud.netflix.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2018-10-17 14:35:25,400  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Initializing Eureka in region us-east-1
2018-10-17 14:35:25,603  INFO - [main                 ] c.n.discovery.provider.DiscoveryJerseyProvider     : Using JSON encoding codec LegacyJacksonJson
2018-10-17 14:35:25,603  INFO - [main                 ] c.n.discovery.provider.DiscoveryJerseyProvider     : Using JSON decoding codec LegacyJacksonJson
2018-10-17 14:35:25,728  INFO - [main                 ] c.n.discovery.provider.DiscoveryJerseyProvider     : Using XML encoding codec XStreamXml
2018-10-17 14:35:25,728  INFO - [main                 ] c.n.discovery.provider.DiscoveryJerseyProvider     : Using XML decoding codec XStreamXml
2018-10-17 14:35:25,916  INFO - [main                 ] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 14:35:26,088  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Disable delta property : false
2018-10-17 14:35:26,088  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Single vip registry refresh property : null
2018-10-17 14:35:26,088  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Force full registry fetch : false
2018-10-17 14:35:26,088  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Application is null : false
2018-10-17 14:35:26,088  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Registered Applications size is zero : true
2018-10-17 14:35:26,088  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Application version is -1: true
2018-10-17 14:35:26,088  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Getting all instance registry info from the eureka server
2018-10-17 14:35:26,275  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : The response status is 200
2018-10-17 14:35:26,275  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Starting heartbeat executor: renew interval is: 30
2018-10-17 14:35:26,275  INFO - [main                 ] com.netflix.discovery.InstanceInfoReplicator       : InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-10-17 14:35:26,291  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Discovery Client initialized at timestamp 1539758126291 with initial instances count: 2
2018-10-17 14:35:26,291  INFO - [main                 ] o.s.c.n.e.serviceregistry.EurekaServiceRegistry    : Registering application feignClient with eureka with status UP
2018-10-17 14:35:26,291  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Saw local status change event StatusChangeEvent [timestamp=1539758126291, current=UP, previous=STARTING]
2018-10-17 14:35:26,291  INFO - [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient              : DiscoveryClient_FEIGNCLIENT/LAPTOP-AJOD9Q7O:feignClient:8090: registering service...
2018-10-17 14:35:26,306  INFO - [main                 ] org.apache.coyote.http11.Http11NioProtocol         : Starting ProtocolHandler ["http-nio-8090"]
2018-10-17 14:35:26,322  INFO - [main                 ] org.apache.tomcat.util.net.NioSelectorPool         : Using a shared selector for servlet write/read
2018-10-17 14:35:26,337  INFO - [main                 ] o.s.boot.web.embedded.tomcat.TomcatWebServer       : Tomcat started on port(s): 8090 (http) with context path ''
2018-10-17 14:35:26,337  INFO - [main                 ] o.s.c.n.e.s.EurekaAutoServiceRegistration          : Updating port to 8090
2018-10-17 14:35:26,337  INFO - [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient              : DiscoveryClient_FEIGNCLIENT/LAPTOP-AJOD9Q7O:feignClient:8090 - registration status: 204
2018-10-17 14:35:26,337  INFO - [main                 ] com.example.feign.FeignApplication                 : Started FeignApplication in 7.788 seconds (JVM running for 8.489)
2018-10-17 14:35:38,905  INFO - [http-nio-8090-exec-1 ] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-10-17 14:35:38,906  INFO - [http-nio-8090-exec-1 ] org.springframework.web.servlet.DispatcherServlet  : FrameworkServlet 'dispatcherServlet': initialization started
2018-10-17 14:35:38,937  INFO - [http-nio-8090-exec-1 ] org.springframework.web.servlet.DispatcherServlet  : FrameworkServlet 'dispatcherServlet': initialization completed in 31 ms
2018-10-17 14:35:39,169  INFO - [hystrix-RIBBONCLIENT-1] o.s.c.a.AnnotationConfigApplicationContext         : Refreshing SpringClientFactory-RIBBONCLIENT: startup date [Wed Oct 17 14:35:39 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3a5ecce3
2018-10-17 14:35:39,234  INFO - [hystrix-RIBBONCLIENT-1] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor     : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-10-17 14:35:39,756  INFO - [hystrix-RIBBONCLIENT-1] com.netflix.config.ChainedDynamicProperty          : Flipping property: RIBBONCLIENT.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-10-17 14:35:39,783  INFO - [hystrix-RIBBONCLIENT-1] com.netflix.util.concurrent.ShutdownEnabledTimer   : Shutdown hook installed for: NFLoadBalancer-PingTimer-RIBBONCLIENT
2018-10-17 14:35:39,815  INFO - [hystrix-RIBBONCLIENT-1] com.netflix.loadbalancer.BaseLoadBalancer          : Client: RIBBONCLIENT instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=RIBBONCLIENT,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-10-17 14:35:39,824  INFO - [hystrix-RIBBONCLIENT-1] c.n.loadbalancer.DynamicServerListLoadBalancer     : Using serverListUpdater PollingServerListUpdater
2018-10-17 14:35:39,849  INFO - [hystrix-RIBBONCLIENT-1] com.netflix.config.ChainedDynamicProperty          : Flipping property: RIBBONCLIENT.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-10-17 14:35:39,852  INFO - [hystrix-RIBBONCLIENT-1] c.n.loadbalancer.DynamicServerListLoadBalancer     : DynamicServerListLoadBalancer for client RIBBONCLIENT initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=RIBBONCLIENT,current list of Servers=[LAPTOP-AJOD9Q7O:8080],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:LAPTOP-AJOD9Q7O:8080;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@6a1219b8
2018-10-17 14:35:40,829  INFO - [PollingServerListUpdater-0] com.netflix.config.ChainedDynamicProperty          : Flipping property: RIBBONCLIENT.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-10-17 14:40:26,100  INFO - [AsyncResolver-bootstrap-executor-0] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 14:45:26,104  INFO - [AsyncResolver-bootstrap-executor-0] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 14:50:26,116  INFO - [AsyncResolver-bootstrap-executor-0] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 14:55:26,131  INFO - [AsyncResolver-bootstrap-executor-0] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 15:00:26,134  INFO - [AsyncResolver-bootstrap-executor-0] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 15:05:26,151  INFO - [AsyncResolver-bootstrap-executor-0] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 15:10:26,154  INFO - [AsyncResolver-bootstrap-executor-0] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 15:14:55,097  INFO - [main                 ] o.s.c.a.AnnotationConfigApplicationContext         : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@15aab8c6: startup date [Wed Oct 17 15:14:55 CST 2018]; root of context hierarchy
2018-10-17 15:14:55,300  INFO - [main                 ] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor     : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-10-17 15:14:55,332  INFO - [main                 ] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6aacd668] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-17 15:14:55,691  INFO - [main                 ] com.example.feign.FeignApplication                 : No active profile set, falling back to default profiles: default
2018-10-17 15:14:55,707  INFO - [main                 ] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@531f4093: startup date [Wed Oct 17 15:14:55 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@15aab8c6
2018-10-17 15:14:56,589  INFO - [main                 ] o.springframework.cloud.context.scope.GenericScope : BeanFactory id=8c0af0b4-8514-38c0-a592-e0158726d74b
2018-10-17 15:14:56,620  INFO - [main                 ] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor     : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-10-17 15:14:56,979  INFO - [main                 ] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6aacd668] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-17 15:14:57,682  INFO - [main                 ] o.s.boot.web.embedded.tomcat.TomcatWebServer       : Tomcat initialized with port(s): 8090 (http)
2018-10-17 15:14:57,698  INFO - [main                 ] org.apache.coyote.http11.Http11NioProtocol         : Initializing ProtocolHandler ["http-nio-8090"]
2018-10-17 15:14:57,714  INFO - [main                 ] org.apache.catalina.core.StandardService           : Starting service [Tomcat]
2018-10-17 15:14:57,714  INFO - [main                 ] org.apache.catalina.core.StandardEngine            : Starting Servlet Engine: Apache Tomcat/8.5.32
2018-10-17 15:14:57,729  INFO - [localhost-startStop-1] org.apache.catalina.core.AprLifecycleListener      : The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_101\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;%JAVA_HOME%\bin;C:\Program Files\MySQL\MySQL Server 5.5\bin;E:\apache_maven_3.3.9\bin;D:\database\redis\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;D:\Git\cmd;D:\database\mongodb\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\RabbitMQ Server\rabbitmq_server-3.7.7\sbin;C:\Program Files\erl10.0.1\bin;D:\database\mysql-5.7.23-winx64\bin;D:\nodejs\;D:\scala-2.11.8\bin;C:\Users\49535\AppData\Local\Microsoft\WindowsApps;C:\Users\49535\AppData\Roaming\npm;.]
2018-10-17 15:14:57,979  INFO - [localhost-startStop-1] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]  : Initializing Spring embedded WebApplicationContext
2018-10-17 15:14:57,979  INFO - [localhost-startStop-1] org.springframework.web.context.ContextLoader      : Root WebApplicationContext: initialization completed in 2272 ms
2018-10-17 15:14:58,198  WARN - [localhost-startStop-1] com.netflix.config.sources.URLConfigurationSource  : No URLs will be polled as dynamic configuration sources.
2018-10-17 15:14:58,198  INFO - [localhost-startStop-1] com.netflix.config.sources.URLConfigurationSource  : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-17 15:14:58,213  INFO - [localhost-startStop-1] com.netflix.config.DynamicPropertyFactory          : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1410d5d4
2018-10-17 15:14:59,666  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-10-17 15:14:59,666  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'webMvcMetricsFilter' to: [/*]
2018-10-17 15:14:59,666  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-10-17 15:14:59,666  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-10-17 15:14:59,666  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'requestContextFilter' to: [/*]
2018-10-17 15:14:59,666  INFO - [localhost-startStop-1] o.s.boot.web.servlet.FilterRegistrationBean        : Mapping filter: 'httpTraceFilter' to: [/*]
2018-10-17 15:14:59,666  INFO - [localhost-startStop-1] o.s.boot.web.servlet.ServletRegistrationBean       : Servlet dispatcherServlet mapped to [/]
2018-10-17 15:14:59,729  INFO - [main                 ] o.s.c.a.AnnotationConfigApplicationContext         : Refreshing FeignContext-RIBBONCLIENT: startup date [Wed Oct 17 15:14:59 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@531f4093
2018-10-17 15:14:59,744  INFO - [main                 ] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor     : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-10-17 15:14:59,979  WARN - [main                 ] com.netflix.config.sources.URLConfigurationSource  : No URLs will be polled as dynamic configuration sources.
2018-10-17 15:14:59,979  INFO - [main                 ] com.netflix.config.sources.URLConfigurationSource  : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-17 15:15:00,088  INFO - [main                 ] o.s.web.servlet.handler.SimpleUrlHandlerMapping    : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-17 15:15:00,260  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerAdapter         : Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@531f4093: startup date [Wed Oct 17 15:14:55 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@15aab8c6
2018-10-17 15:15:00,322  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/feign/server],methods=[GET],produces=[application/json]}" onto public java.lang.String com.example.feign.client.controller.FeignConsumerController.server()
2018-10-17 15:15:00,322  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/feign/consumer],methods=[GET],produces=[application/json]}" onto public java.lang.String com.example.feign.client.controller.FeignConsumerController.consumer()
2018-10-17 15:15:00,322  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/feign/thirdPart],methods=[GET],produces=[application/json]}" onto public java.lang.String com.example.feign.client.controller.FeignConsumerController.demo()
2018-10-17 15:15:00,322  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-10-17 15:15:00,322  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-10-17 15:15:00,354  INFO - [main                 ] o.s.web.servlet.handler.SimpleUrlHandlerMapping    : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-17 15:15:00,354  INFO - [main                 ] o.s.web.servlet.handler.SimpleUrlHandlerMapping    : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-17 15:15:00,838  INFO - [main                 ] o.s.b.actuate.endpoint.web.EndpointLinksResolver   : Exposing 2 endpoint(s) beneath base path '/actuator'
2018-10-17 15:15:00,853  INFO - [main                 ] o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-10-17 15:15:00,853  INFO - [main                 ] o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-10-17 15:15:00,853  INFO - [main                 ] o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-10-17 15:15:00,916  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Registering beans for JMX exposure on startup
2018-10-17 15:15:00,932  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-10-17 15:15:00,932  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-10-17 15:15:00,932  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-10-17 15:15:00,932  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-10-17 15:15:00,947  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-10-17 15:15:00,947  INFO - [main                 ] o.s.jmx.export.annotation.AnnotationMBeanExporter  : Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=531f4093,type=ConfigurationPropertiesRebinder]
2018-10-17 15:15:00,963  INFO - [main                 ] o.s.context.support.DefaultLifecycleProcessor      : Starting beans in phase 0
2018-10-17 15:15:00,978  INFO - [main                 ] o.s.cloud.netflix.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2018-10-17 15:15:01,025  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Initializing Eureka in region us-east-1
2018-10-17 15:15:01,228  INFO - [main                 ] c.n.discovery.provider.DiscoveryJerseyProvider     : Using JSON encoding codec LegacyJacksonJson
2018-10-17 15:15:01,228  INFO - [main                 ] c.n.discovery.provider.DiscoveryJerseyProvider     : Using JSON decoding codec LegacyJacksonJson
2018-10-17 15:15:01,369  INFO - [main                 ] c.n.discovery.provider.DiscoveryJerseyProvider     : Using XML encoding codec XStreamXml
2018-10-17 15:15:01,369  INFO - [main                 ] c.n.discovery.provider.DiscoveryJerseyProvider     : Using XML decoding codec XStreamXml
2018-10-17 15:15:01,541  INFO - [main                 ] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 15:15:01,713  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Disable delta property : false
2018-10-17 15:15:01,713  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Single vip registry refresh property : null
2018-10-17 15:15:01,713  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Force full registry fetch : false
2018-10-17 15:15:01,713  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Application is null : false
2018-10-17 15:15:01,713  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Registered Applications size is zero : true
2018-10-17 15:15:01,728  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Application version is -1: true
2018-10-17 15:15:01,728  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Getting all instance registry info from the eureka server
2018-10-17 15:15:01,931  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : The response status is 200
2018-10-17 15:15:01,931  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Starting heartbeat executor: renew interval is: 30
2018-10-17 15:15:01,947  INFO - [main                 ] com.netflix.discovery.InstanceInfoReplicator       : InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-10-17 15:15:01,947  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Discovery Client initialized at timestamp 1539760501947 with initial instances count: 2
2018-10-17 15:15:01,947  INFO - [main                 ] o.s.c.n.e.serviceregistry.EurekaServiceRegistry    : Registering application feignClient with eureka with status UP
2018-10-17 15:15:01,947  INFO - [main                 ] com.netflix.discovery.DiscoveryClient              : Saw local status change event StatusChangeEvent [timestamp=1539760501947, current=UP, previous=STARTING]
2018-10-17 15:15:01,947  INFO - [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient              : DiscoveryClient_FEIGNCLIENT/LAPTOP-AJOD9Q7O:feignClient:8090: registering service...
2018-10-17 15:15:01,963  INFO - [main                 ] org.apache.coyote.http11.Http11NioProtocol         : Starting ProtocolHandler ["http-nio-8090"]
2018-10-17 15:15:01,978  INFO - [main                 ] org.apache.tomcat.util.net.NioSelectorPool         : Using a shared selector for servlet write/read
2018-10-17 15:15:01,994  INFO - [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient              : DiscoveryClient_FEIGNCLIENT/LAPTOP-AJOD9Q7O:feignClient:8090 - registration status: 204
2018-10-17 15:15:01,994  INFO - [main                 ] o.s.boot.web.embedded.tomcat.TomcatWebServer       : Tomcat started on port(s): 8090 (http) with context path ''
2018-10-17 15:15:02,009  INFO - [main                 ] o.s.c.n.e.s.EurekaAutoServiceRegistration          : Updating port to 8090
2018-10-17 15:15:02,009  INFO - [main                 ] com.example.feign.FeignApplication                 : Started FeignApplication in 8.006 seconds (JVM running for 8.666)
2018-10-17 15:15:26,397  INFO - [http-nio-8090-exec-1 ] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-10-17 15:15:26,397  INFO - [http-nio-8090-exec-1 ] org.springframework.web.servlet.DispatcherServlet  : FrameworkServlet 'dispatcherServlet': initialization started
2018-10-17 15:15:26,428  INFO - [http-nio-8090-exec-1 ] org.springframework.web.servlet.DispatcherServlet  : FrameworkServlet 'dispatcherServlet': initialization completed in 31 ms
2018-10-17 15:20:01,733  INFO - [AsyncResolver-bootstrap-executor-0] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 15:25:01,743  INFO - [AsyncResolver-bootstrap-executor-0] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 15:30:01,747  INFO - [AsyncResolver-bootstrap-executor-0] c.n.d.shared.resolver.aws.ConfigClusterResolver    : Resolving eureka endpoints via configuration
2018-10-17 17:37:38,086  INFO - [main                 ] o.s.c.a.AnnotationConfigApplicationContext         : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@52c3cb31: startup date [Wed Oct 17 17:37:38 CST 2018]; root of context hierarchy
2018-10-17 17:37:38,367  INFO - [main                 ] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor     : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-10-17 17:37:38,398  INFO - [main                 ] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$973d1b6f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-17 17:37:38,757  INFO - [main                 ] com.example.feign.RewardsApplicationTests          : No active profile set, falling back to default profiles: default
2018-10-17 17:37:38,773  INFO - [main                 ] o.s.w.context.support.GenericWebApplicationContext : Refreshing org.springframework.web.context.support.GenericWebApplicationContext@2cf92cc7: startup date [Wed Oct 17 17:37:38 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@52c3cb31
2018-10-17 17:37:39,737  INFO - [main                 ] o.springframework.cloud.context.scope.GenericScope : BeanFactory id=3c493ba7-9ba8-382a-a15a-ba2451030ab0
2018-10-17 17:37:39,799  INFO - [main                 ] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor     : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-10-17 17:37:40,143  INFO - [main                 ] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$973d1b6f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-17 17:37:40,206  INFO - [main                 ] o.s.c.a.AnnotationConfigApplicationContext         : Refreshing FeignContext-RIBBONCLIENT: startup date [Wed Oct 17 17:37:40 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@2cf92cc7
2018-10-17 17:37:40,237  INFO - [main                 ] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor     : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-10-17 17:37:40,784  WARN - [main                 ] com.netflix.config.sources.URLConfigurationSource  : No URLs will be polled as dynamic configuration sources.
2018-10-17 17:37:40,784  INFO - [main                 ] com.netflix.config.sources.URLConfigurationSource  : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-17 17:37:40,784  WARN - [main                 ] com.netflix.config.sources.URLConfigurationSource  : No URLs will be polled as dynamic configuration sources.
2018-10-17 17:37:40,784  INFO - [main                 ] com.netflix.config.sources.URLConfigurationSource  : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-17 17:37:40,893  INFO - [main                 ] o.s.web.servlet.handler.SimpleUrlHandlerMapping    : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-17 17:37:41,096  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerAdapter         : Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@2cf92cc7: startup date [Wed Oct 17 17:37:38 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@52c3cb31
2018-10-17 17:37:41,159  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/feign/server],methods=[GET],produces=[application/json]}" onto public java.lang.String com.example.feign.client.controller.FeignConsumerController.server()
2018-10-17 17:37:41,159  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/feign/consumer],methods=[GET],produces=[application/json]}" onto public java.lang.String com.example.feign.client.controller.FeignConsumerController.consumer()
2018-10-17 17:37:41,159  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/feign/thirdPart],methods=[GET],produces=[application/json]}" onto public java.lang.String com.example.feign.client.controller.FeignConsumerController.demo()
2018-10-17 17:37:41,159  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-10-17 17:37:41,174  INFO - [main                 ] o.s.w.s.m.m.a.RequestMappingHandlerMapping         : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-10-17 17:37:41,205  INFO - [main                 ] o.s.web.servlet.handler.SimpleUrlHandlerMapping    : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-17 17:37:41,205  INFO - [main                 ] o.s.web.servlet.handler.SimpleUrlHandlerMapping    : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-17 17:37:43,111  INFO - [main                 ] o.s.b.actuate.endpoint.web.EndpointLinksResolver   : Exposing 2 endpoint(s) beneath base path '/actuator'
2018-10-17 17:37:43,127  INFO - [main                 ] o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-10-17 17:37:43,127  INFO - [main                 ] o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-10-17 17:37:43,127  INFO - [main                 ] o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-10-17 17:37:43,189  INFO - [main                 ] o.s.context.support.DefaultLifecycleProcessor      : Starting beans in phase 0
2018-10-17 17:37:43,221  INFO - [main                 ] com.example.feign.RewardsApplicationTests          : Started RewardsApplicationTests in 5.885 seconds (JVM running for 6.796)
2018-10-17 17:37:43,377  INFO - [Thread-5             ] o.s.w.context.support.GenericWebApplicationContext : Closing org.springframework.web.context.support.GenericWebApplicationContext@2cf92cc7: startup date [Wed Oct 17 17:37:38 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@52c3cb31
2018-10-17 17:37:43,392  INFO - [Thread-5             ] o.s.cloud.netflix.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2018-10-17 17:37:43,392  INFO - [Thread-5             ] o.s.c.n.e.serviceregistry.EurekaServiceRegistry    : Unregistering application feignClient with eureka with status DOWN
2018-10-17 17:37:43,392  INFO - [Thread-5             ] o.s.context.support.DefaultLifecycleProcessor      : Stopping beans in phase 0
2018-10-17 17:37:43,408  INFO - [Thread-5             ] o.s.c.a.AnnotationConfigApplicationContext         : Closing FeignContext-RIBBONCLIENT: startup date [Wed Oct 17 17:37:40 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@2cf92cc7
2018-10-17 17:37:43,408  WARN - [Thread-5             ] o.s.c.a.AnnotationConfigApplicationContext         : Exception thrown from ApplicationListener handling ContextClosedEvent
org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaAutoServiceRegistration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1089)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:288)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:258)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:180)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:400)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:406)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:354)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1000)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:967)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:256)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
